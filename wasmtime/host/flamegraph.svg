<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="99"><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 1.01%)</title><rect x="0.0000%" y="789" width="1.0101%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="0.0000%" y="773" width="1.0101%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>cranelift_codegen::machinst::blockorder::BlockLoweringOrder::new (1 samples, 1.01%)</title><rect x="1.0101%" y="789" width="1.0101%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.2601%" y="799.50"></text></g><g><title>&lt;cranelift_entity::map::SecondaryMap&lt;K,V&gt; as core::ops::index::IndexMut&lt;K&gt;&gt;::index_mut (1 samples, 1.01%)</title><rect x="1.0101%" y="773" width="1.0101%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.2601%" y="783.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (1 samples, 1.01%)</title><rect x="1.0101%" y="757" width="1.0101%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.2601%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 1.01%)</title><rect x="1.0101%" y="741" width="1.0101%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.2601%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 1.01%)</title><rect x="1.0101%" y="725" width="1.0101%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="1.2601%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="1.0101%" y="709" width="1.0101%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="1.2601%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="1.0101%" y="693" width="1.0101%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="1.2601%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.01%)</title><rect x="1.0101%" y="677" width="1.0101%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="1.2601%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.01%)</title><rect x="1.0101%" y="661" width="1.0101%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="1.2601%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.01%)</title><rect x="1.0101%" y="645" width="1.0101%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="1.2601%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 1.01%)</title><rect x="1.0101%" y="629" width="1.0101%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="1.2601%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 1.01%)</title><rect x="1.0101%" y="613" width="1.0101%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="1.2601%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 1.01%)</title><rect x="1.0101%" y="597" width="1.0101%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="1.2601%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 1.01%)</title><rect x="1.0101%" y="581" width="1.0101%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="1.2601%" y="591.50"></text></g><g><title>__aarch64_cas4_acq (1 samples, 1.01%)</title><rect x="1.0101%" y="565" width="1.0101%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="1.2601%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.01%)</title><rect x="2.0202%" y="757" width="1.0101%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="1"/><text x="2.2702%" y="767.50"></text></g><g><title>&lt;cranelift_codegen::ir::layout::Insts as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 1.01%)</title><rect x="2.0202%" y="741" width="1.0101%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="1"/><text x="2.2702%" y="751.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::lower_clif_block (2 samples, 2.02%)</title><rect x="2.0202%" y="773" width="2.0202%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="2"/><text x="2.2702%" y="783.50">c..</text></g><g><title>cranelift_codegen::isa::aarch64::lower::&lt;impl cranelift_codegen::machinst::lower::LowerBackend for cranelift_codegen::isa::aarch64::AArch64Backend&gt;::lower (1 samples, 1.01%)</title><rect x="3.0303%" y="757" width="1.0101%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="3.2803%" y="767.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::isle::lower (1 samples, 1.01%)</title><rect x="3.0303%" y="741" width="1.0101%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="3.2803%" y="751.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::isle::generated_code::constructor_lower (1 samples, 1.01%)</title><rect x="3.0303%" y="725" width="1.0101%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="1"/><text x="3.2803%" y="735.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::isle::&lt;impl cranelift_codegen::isa::aarch64::lower::isle::generated_code::Context for cranelift_codegen::machinst::isle::IsleContext&lt;cranelift_codegen::isa::aarch64::lower::isle::generated_code::MInst,cranelift_codegen::isa::aarch64::AArch64Backend&gt;&gt;::gen_call (1 samples, 1.01%)</title><rect x="3.0303%" y="709" width="1.0101%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="1"/><text x="3.2803%" y="719.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::isle::&lt;impl cranelift_codegen::machinst::isle::IsleContext&lt;cranelift_codegen::isa::aarch64::lower::isle::generated_code::MInst,cranelift_codegen::isa::aarch64::AArch64Backend&gt;&gt;::gen_call_common (1 samples, 1.01%)</title><rect x="3.0303%" y="693" width="1.0101%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="1"/><text x="3.2803%" y="703.50"></text></g><g><title>cranelift_codegen::machinst::abi::CallSite&lt;M&gt;::gen_retval (1 samples, 1.01%)</title><rect x="3.0303%" y="677" width="1.0101%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="1"/><text x="3.2803%" y="687.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::lower_clif_branches (1 samples, 1.01%)</title><rect x="4.0404%" y="773" width="1.0101%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="4.2904%" y="783.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::&lt;impl cranelift_codegen::machinst::lower::LowerBackend for cranelift_codegen::isa::aarch64::AArch64Backend&gt;::lower_branch (1 samples, 1.01%)</title><rect x="4.0404%" y="757" width="1.0101%" height="15" fill="rgb(238,160,17)" fg:x="4" fg:w="1"/><text x="4.2904%" y="767.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::isle::lower_branch (1 samples, 1.01%)</title><rect x="4.0404%" y="741" width="1.0101%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="1"/><text x="4.2904%" y="751.50"></text></g><g><title>cranelift_codegen::isa::aarch64::lower::isle::generated_code::constructor_lower_branch (1 samples, 1.01%)</title><rect x="4.0404%" y="725" width="1.0101%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="1"/><text x="4.2904%" y="735.50"></text></g><g><title>cranelift_codegen::machinst::vcode::VCodeBuilder&lt;I&gt;::collect_operands (1 samples, 1.01%)</title><rect x="5.0505%" y="757" width="1.0101%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="5.3005%" y="767.50"></text></g><g><title>&lt;regalloc2::PRegSet as core::convert::From&lt;&amp;regalloc2::MachineEnv&gt;&gt;::from (1 samples, 1.01%)</title><rect x="5.0505%" y="741" width="1.0101%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="5.3005%" y="751.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::lower (5 samples, 5.05%)</title><rect x="2.0202%" y="789" width="5.0505%" height="15" fill="rgb(213,181,19)" fg:x="2" fg:w="5"/><text x="2.2702%" y="799.50">cranel..</text></g><g><title>cranelift_codegen::machinst::vcode::VCodeBuilder&lt;I&gt;::build (2 samples, 2.02%)</title><rect x="5.0505%" y="773" width="2.0202%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="2"/><text x="5.3005%" y="783.50">c..</text></g><g><title>cranelift_codegen::machinst::vcode::VCodeBuilder&lt;I&gt;::compute_preds_from_succs (1 samples, 1.01%)</title><rect x="6.0606%" y="757" width="1.0101%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="6.3106%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable (1 samples, 1.01%)</title><rect x="6.0606%" y="741" width="1.0101%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="6.3106%" y="751.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 1.01%)</title><rect x="6.0606%" y="725" width="1.0101%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="1"/><text x="6.3106%" y="735.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 1.01%)</title><rect x="6.0606%" y="709" width="1.0101%" height="15" fill="rgb(245,192,40)" fg:x="6" fg:w="1"/><text x="6.3106%" y="719.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 1.01%)</title><rect x="6.0606%" y="693" width="1.0101%" height="15" fill="rgb(238,167,29)" fg:x="6" fg:w="1"/><text x="6.3106%" y="703.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 1.01%)</title><rect x="6.0606%" y="677" width="1.0101%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="1"/><text x="6.3106%" y="687.50"></text></g><g><title>core::slice::sort::insert_tail (1 samples, 1.01%)</title><rect x="6.0606%" y="661" width="1.0101%" height="15" fill="rgb(231,60,39)" fg:x="6" fg:w="1"/><text x="6.3106%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 1.01%)</title><rect x="6.0606%" y="645" width="1.0101%" height="15" fill="rgb(208,69,12)" fg:x="6" fg:w="1"/><text x="6.3106%" y="655.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::compute_use_states (1 samples, 1.01%)</title><rect x="7.0707%" y="773" width="1.0101%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="1"/><text x="7.3207%" y="783.50"></text></g><g><title>cranelift_codegen::machinst::lower::Lower&lt;I&gt;::new (3 samples, 3.03%)</title><rect x="7.0707%" y="789" width="3.0303%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="3"/><text x="7.3207%" y="799.50">cra..</text></g><g><title>cranelift_codegen::machinst::vcode::VRegAllocator&lt;I&gt;::alloc_with_maybe_fact (2 samples, 2.02%)</title><rect x="8.0808%" y="773" width="2.0202%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="2"/><text x="8.3308%" y="783.50">c..</text></g><g><title>cranelift_codegen::machinst::vcode::VRegAllocator&lt;I&gt;::alloc (2 samples, 2.02%)</title><rect x="8.0808%" y="757" width="2.0202%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="2"/><text x="8.3308%" y="767.50">c..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 2.02%)</title><rect x="8.0808%" y="741" width="2.0202%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="2"/><text x="8.3308%" y="751.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2 samples, 2.02%)</title><rect x="8.0808%" y="725" width="2.0202%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="2"/><text x="8.3308%" y="735.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 2.02%)</title><rect x="8.0808%" y="709" width="2.0202%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="2"/><text x="8.3308%" y="719.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 2.02%)</title><rect x="8.0808%" y="693" width="2.0202%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="2"/><text x="8.3308%" y="703.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 2.02%)</title><rect x="8.0808%" y="677" width="2.0202%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="2"/><text x="8.3308%" y="687.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 2.02%)</title><rect x="8.0808%" y="661" width="2.0202%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="2"/><text x="8.3308%" y="671.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 2.02%)</title><rect x="8.0808%" y="645" width="2.0202%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="2"/><text x="8.3308%" y="655.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 2.02%)</title><rect x="8.0808%" y="629" width="2.0202%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="2"/><text x="8.3308%" y="639.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 2.02%)</title><rect x="8.0808%" y="613" width="2.0202%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="2"/><text x="8.3308%" y="623.50">a..</text></g><g><title>alloc::alloc::realloc (2 samples, 2.02%)</title><rect x="8.0808%" y="597" width="2.0202%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="2"/><text x="8.3308%" y="607.50">a..</text></g><g><title>__GI___libc_realloc (2 samples, 2.02%)</title><rect x="8.0808%" y="581" width="2.0202%" height="15" fill="rgb(217,147,25)" fg:x="8" fg:w="2"/><text x="8.3308%" y="591.50">_..</text></g><g><title>_int_realloc (2 samples, 2.02%)</title><rect x="8.0808%" y="565" width="2.0202%" height="15" fill="rgb(247,81,37)" fg:x="8" fg:w="2"/><text x="8.3308%" y="575.50">_..</text></g><g><title>__memcpy_generic (2 samples, 2.02%)</title><rect x="8.0808%" y="549" width="2.0202%" height="15" fill="rgb(209,12,38)" fg:x="8" fg:w="2"/><text x="8.3308%" y="559.50">_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regalloc2::ion::data_structures::PRegData&gt;&gt; (1 samples, 1.01%)</title><rect x="10.1010%" y="757" width="1.0101%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="10.3510%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.01%)</title><rect x="10.1010%" y="741" width="1.0101%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="10.3510%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regalloc2::ion::data_structures::PRegData]&gt; (1 samples, 1.01%)</title><rect x="10.1010%" y="725" width="1.0101%" height="15" fill="rgb(221,10,30)" fg:x="10" fg:w="1"/><text x="10.3510%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;regalloc2::ion::data_structures::PRegData&gt; (1 samples, 1.01%)</title><rect x="10.1010%" y="709" width="1.0101%" height="15" fill="rgb(210,229,1)" fg:x="10" fg:w="1"/><text x="10.3510%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;regalloc2::ion::data_structures::LiveRangeSet&gt; (1 samples, 1.01%)</title><rect x="10.1010%" y="693" width="1.0101%" height="15" fill="rgb(222,148,37)" fg:x="10" fg:w="1"/><text x="10.3510%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;regalloc2::ion::data_structures::LiveRangeKey,regalloc2::ion::data_structures::LiveRangeIndex&gt;&gt; (1 samples, 1.01%)</title><rect x="10.1010%" y="677" width="1.0101%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="10.3510%" y="687.50"></text></g><g><title>__GI___libc_free (1 samples, 1.01%)</title><rect x="10.1010%" y="661" width="1.0101%" height="15" fill="rgb(247,98,35)" fg:x="10" fg:w="1"/><text x="10.3510%" y="671.50"></text></g><g><title>_int_free (1 samples, 1.01%)</title><rect x="10.1010%" y="645" width="1.0101%" height="15" fill="rgb(247,138,52)" fg:x="10" fg:w="1"/><text x="10.3510%" y="655.50"></text></g><g><title>regalloc2::ion::liveranges::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::build_liveranges (1 samples, 1.01%)</title><rect x="11.1111%" y="741" width="1.0101%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="11.3611%" y="751.50"></text></g><g><title>regalloc2::ion::liveranges::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::add_liverange_to_preg (1 samples, 1.01%)</title><rect x="11.1111%" y="725" width="1.0101%" height="15" fill="rgb(246,177,23)" fg:x="11" fg:w="1"/><text x="11.3611%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 1.01%)</title><rect x="11.1111%" y="709" width="1.0101%" height="15" fill="rgb(230,62,27)" fg:x="11" fg:w="1"/><text x="11.3611%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 1.01%)</title><rect x="11.1111%" y="693" width="1.0101%" height="15" fill="rgb(216,154,8)" fg:x="11" fg:w="1"/><text x="11.3611%" y="703.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (1 samples, 1.01%)</title><rect x="11.1111%" y="677" width="1.0101%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="1"/><text x="11.3611%" y="687.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (1 samples, 1.01%)</title><rect x="11.1111%" y="661" width="1.0101%" height="15" fill="rgb(251,115,12)" fg:x="11" fg:w="1"/><text x="11.3611%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 1.01%)</title><rect x="11.1111%" y="645" width="1.0101%" height="15" fill="rgb(240,54,50)" fg:x="11" fg:w="1"/><text x="11.3611%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 1.01%)</title><rect x="11.1111%" y="629" width="1.0101%" height="15" fill="rgb(233,84,52)" fg:x="11" fg:w="1"/><text x="11.3611%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.01%)</title><rect x="11.1111%" y="613" width="1.0101%" height="15" fill="rgb(207,117,47)" fg:x="11" fg:w="1"/><text x="11.3611%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.01%)</title><rect x="11.1111%" y="597" width="1.0101%" height="15" fill="rgb(249,43,39)" fg:x="11" fg:w="1"/><text x="11.3611%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.01%)</title><rect x="11.1111%" y="581" width="1.0101%" height="15" fill="rgb(209,38,44)" fg:x="11" fg:w="1"/><text x="11.3611%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.01%)</title><rect x="11.1111%" y="565" width="1.0101%" height="15" fill="rgb(236,212,23)" fg:x="11" fg:w="1"/><text x="11.3611%" y="575.50"></text></g><g><title>__aarch64_cas4_acq (1 samples, 1.01%)</title><rect x="11.1111%" y="549" width="1.0101%" height="15" fill="rgb(242,79,21)" fg:x="11" fg:w="1"/><text x="11.3611%" y="559.50"></text></g><g><title>regalloc2::ion::liveranges::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::compute_liveness (1 samples, 1.01%)</title><rect x="12.1212%" y="741" width="1.0101%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="12.3712%" y="751.50"></text></g><g><title>regalloc2::ion::liveranges::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::create_pregs_and_vregs (1 samples, 1.01%)</title><rect x="13.1313%" y="741" width="1.0101%" height="15" fill="rgb(253,215,40)" fg:x="13" fg:w="1"/><text x="13.3813%" y="751.50"></text></g><g><title>regalloc2::ion::data_structures::VRegs::add (1 samples, 1.01%)</title><rect x="13.1313%" y="725" width="1.0101%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="1"/><text x="13.3813%" y="735.50"></text></g><g><title>regalloc2::ion::data_structures::VRegs::push (1 samples, 1.01%)</title><rect x="13.1313%" y="709" width="1.0101%" height="15" fill="rgb(208,190,38)" fg:x="13" fg:w="1"/><text x="13.3813%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 1.01%)</title><rect x="13.1313%" y="693" width="1.0101%" height="15" fill="rgb(235,213,38)" fg:x="13" fg:w="1"/><text x="13.3813%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.01%)</title><rect x="13.1313%" y="677" width="1.0101%" height="15" fill="rgb(237,122,38)" fg:x="13" fg:w="1"/><text x="13.3813%" y="687.50"></text></g><g><title>regalloc2::ion::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::init (4 samples, 4.04%)</title><rect x="11.1111%" y="757" width="4.0404%" height="15" fill="rgb(244,218,35)" fg:x="11" fg:w="4"/><text x="11.3611%" y="767.50">rega..</text></g><g><title>regalloc2::ion::merge::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::merge_vreg_bundles (1 samples, 1.01%)</title><rect x="14.1414%" y="741" width="1.0101%" height="15" fill="rgb(240,68,47)" fg:x="14" fg:w="1"/><text x="14.3914%" y="751.50"></text></g><g><title>regalloc2::ion::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::new (1 samples, 1.01%)</title><rect x="15.1515%" y="757" width="1.0101%" height="15" fill="rgb(210,16,53)" fg:x="15" fg:w="1"/><text x="15.4015%" y="767.50"></text></g><g><title>regalloc2::ion::data_structures::LiveRanges::with_capacity (1 samples, 1.01%)</title><rect x="15.1515%" y="741" width="1.0101%" height="15" fill="rgb(235,124,12)" fg:x="15" fg:w="1"/><text x="15.4015%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 1.01%)</title><rect x="15.1515%" y="725" width="1.0101%" height="15" fill="rgb(224,169,11)" fg:x="15" fg:w="1"/><text x="15.4015%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 1.01%)</title><rect x="15.1515%" y="709" width="1.0101%" height="15" fill="rgb(250,166,2)" fg:x="15" fg:w="1"/><text x="15.4015%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 1.01%)</title><rect x="15.1515%" y="693" width="1.0101%" height="15" fill="rgb(242,216,29)" fg:x="15" fg:w="1"/><text x="15.4015%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 1.01%)</title><rect x="15.1515%" y="677" width="1.0101%" height="15" fill="rgb(230,116,27)" fg:x="15" fg:w="1"/><text x="15.4015%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.01%)</title><rect x="15.1515%" y="661" width="1.0101%" height="15" fill="rgb(228,99,48)" fg:x="15" fg:w="1"/><text x="15.4015%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.01%)</title><rect x="15.1515%" y="645" width="1.0101%" height="15" fill="rgb(253,11,6)" fg:x="15" fg:w="1"/><text x="15.4015%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.01%)</title><rect x="15.1515%" y="629" width="1.0101%" height="15" fill="rgb(247,143,39)" fg:x="15" fg:w="1"/><text x="15.4015%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.01%)</title><rect x="15.1515%" y="613" width="1.0101%" height="15" fill="rgb(236,97,10)" fg:x="15" fg:w="1"/><text x="15.4015%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 1.01%)</title><rect x="15.1515%" y="597" width="1.0101%" height="15" fill="rgb(233,208,19)" fg:x="15" fg:w="1"/><text x="15.4015%" y="607.50"></text></g><g><title>unlink_chunk (1 samples, 1.01%)</title><rect x="15.1515%" y="581" width="1.0101%" height="15" fill="rgb(216,164,2)" fg:x="15" fg:w="1"/><text x="15.4015%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 1.01%)</title><rect x="16.1616%" y="725" width="1.0101%" height="15" fill="rgb(220,129,5)" fg:x="16" fg:w="1"/><text x="16.4116%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 1.01%)</title><rect x="16.1616%" y="709" width="1.0101%" height="15" fill="rgb(242,17,10)" fg:x="16" fg:w="1"/><text x="16.4116%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 1.01%)</title><rect x="16.1616%" y="693" width="1.0101%" height="15" fill="rgb(242,107,0)" fg:x="16" fg:w="1"/><text x="16.4116%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 1.01%)</title><rect x="16.1616%" y="677" width="1.0101%" height="15" fill="rgb(251,28,31)" fg:x="16" fg:w="1"/><text x="16.4116%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 1.01%)</title><rect x="16.1616%" y="661" width="1.0101%" height="15" fill="rgb(233,223,10)" fg:x="16" fg:w="1"/><text x="16.4116%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 1.01%)</title><rect x="16.1616%" y="645" width="1.0101%" height="15" fill="rgb(215,21,27)" fg:x="16" fg:w="1"/><text x="16.4116%" y="655.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.01%)</title><rect x="16.1616%" y="629" width="1.0101%" height="15" fill="rgb(232,23,21)" fg:x="16" fg:w="1"/><text x="16.4116%" y="639.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.01%)</title><rect x="16.1616%" y="613" width="1.0101%" height="15" fill="rgb(244,5,23)" fg:x="16" fg:w="1"/><text x="16.4116%" y="623.50"></text></g><g><title>tcache_get (1 samples, 1.01%)</title><rect x="16.1616%" y="597" width="1.0101%" height="15" fill="rgb(226,81,46)" fg:x="16" fg:w="1"/><text x="16.4116%" y="607.50"></text></g><g><title>regalloc2::ion::moves::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::apply_allocations_and_insert_moves (2 samples, 2.02%)</title><rect x="16.1616%" y="741" width="2.0202%" height="15" fill="rgb(247,70,30)" fg:x="16" fg:w="2"/><text x="16.4116%" y="751.50">r..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_capacity_and_hasher (1 samples, 1.01%)</title><rect x="17.1717%" y="725" width="1.0101%" height="15" fill="rgb(212,68,19)" fg:x="17" fg:w="1"/><text x="17.4217%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::with_capacity (1 samples, 1.01%)</title><rect x="17.1717%" y="709" width="1.0101%" height="15" fill="rgb(240,187,13)" fg:x="17" fg:w="1"/><text x="17.4217%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 1.01%)</title><rect x="17.1717%" y="693" width="1.0101%" height="15" fill="rgb(223,113,26)" fg:x="17" fg:w="1"/><text x="17.4217%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::fallible_with_capacity (1 samples, 1.01%)</title><rect x="17.1717%" y="677" width="1.0101%" height="15" fill="rgb(206,192,2)" fg:x="17" fg:w="1"/><text x="17.4217%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 1.01%)</title><rect x="17.1717%" y="661" width="1.0101%" height="15" fill="rgb(241,108,4)" fg:x="17" fg:w="1"/><text x="17.4217%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 1.01%)</title><rect x="17.1717%" y="645" width="1.0101%" height="15" fill="rgb(247,173,49)" fg:x="17" fg:w="1"/><text x="17.4217%" y="655.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 1.01%)</title><rect x="17.1717%" y="629" width="1.0101%" height="15" fill="rgb(224,114,35)" fg:x="17" fg:w="1"/><text x="17.4217%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::alloc::inner::Global as hashbrown::raw::alloc::inner::Allocator&gt;::allocate (1 samples, 1.01%)</title><rect x="17.1717%" y="613" width="1.0101%" height="15" fill="rgb(245,159,27)" fg:x="17" fg:w="1"/><text x="17.4217%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 1.01%)</title><rect x="17.1717%" y="597" width="1.0101%" height="15" fill="rgb(245,172,44)" fg:x="17" fg:w="1"/><text x="17.4217%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.01%)</title><rect x="17.1717%" y="581" width="1.0101%" height="15" fill="rgb(236,23,11)" fg:x="17" fg:w="1"/><text x="17.4217%" y="591.50"></text></g><g><title>__aarch64_swp4_rel (1 samples, 1.01%)</title><rect x="17.1717%" y="565" width="1.0101%" height="15" fill="rgb(205,117,38)" fg:x="17" fg:w="1"/><text x="17.4217%" y="575.50"></text></g><g><title>regalloc2::ion::moves::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::resolve_inserted_moves (1 samples, 1.01%)</title><rect x="18.1818%" y="741" width="1.0101%" height="15" fill="rgb(237,72,25)" fg:x="18" fg:w="1"/><text x="18.4318%" y="751.50"></text></g><g><title>regalloc2::ion::reg_traversal::RegTraversalIter::new (1 samples, 1.01%)</title><rect x="18.1818%" y="725" width="1.0101%" height="15" fill="rgb(244,70,9)" fg:x="18" fg:w="1"/><text x="18.4318%" y="735.50"></text></g><g><title>cranelift_codegen::isa::aarch64::AArch64Backend::compile_vcode (21 samples, 21.21%)</title><rect x="0.0000%" y="821" width="21.2121%" height="15" fill="rgb(217,125,39)" fg:x="0" fg:w="21"/><text x="0.2500%" y="831.50">cranelift_codegen::isa::aarch64::..</text></g><g><title>cranelift_codegen::machinst::compile::compile (21 samples, 21.21%)</title><rect x="0.0000%" y="805" width="21.2121%" height="15" fill="rgb(235,36,10)" fg:x="0" fg:w="21"/><text x="0.2500%" y="815.50">cranelift_codegen::machinst::comp..</text></g><g><title>regalloc2::run (11 samples, 11.11%)</title><rect x="10.1010%" y="789" width="11.1111%" height="15" fill="rgb(251,123,47)" fg:x="10" fg:w="11"/><text x="10.3510%" y="799.50">regalloc2::run</text></g><g><title>regalloc2::ion::run (11 samples, 11.11%)</title><rect x="10.1010%" y="773" width="11.1111%" height="15" fill="rgb(221,13,13)" fg:x="10" fg:w="11"/><text x="10.3510%" y="783.50">regalloc2::ion::..</text></g><g><title>regalloc2::ion::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::run (5 samples, 5.05%)</title><rect x="16.1616%" y="757" width="5.0505%" height="15" fill="rgb(238,131,9)" fg:x="16" fg:w="5"/><text x="16.4116%" y="767.50">regall..</text></g><g><title>regalloc2::ion::process::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::process_bundles (2 samples, 2.02%)</title><rect x="19.1919%" y="741" width="2.0202%" height="15" fill="rgb(211,50,8)" fg:x="19" fg:w="2"/><text x="19.4419%" y="751.50">r..</text></g><g><title>regalloc2::ion::process::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::process_bundle (2 samples, 2.02%)</title><rect x="19.1919%" y="725" width="2.0202%" height="15" fill="rgb(245,182,24)" fg:x="19" fg:w="2"/><text x="19.4419%" y="735.50">r..</text></g><g><title>regalloc2::ion::process::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::evict_bundle (1 samples, 1.01%)</title><rect x="20.2020%" y="709" width="1.0101%" height="15" fill="rgb(242,14,37)" fg:x="20" fg:w="1"/><text x="20.4520%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 1.01%)</title><rect x="20.2020%" y="693" width="1.0101%" height="15" fill="rgb(246,228,12)" fg:x="20" fg:w="1"/><text x="20.4520%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove_entry (1 samples, 1.01%)</title><rect x="20.2020%" y="677" width="1.0101%" height="15" fill="rgb(213,55,15)" fg:x="20" fg:w="1"/><text x="20.4520%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_entry (1 samples, 1.01%)</title><rect x="20.2020%" y="661" width="1.0101%" height="15" fill="rgb(209,9,3)" fg:x="20" fg:w="1"/><text x="20.4520%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 1.01%)</title><rect x="20.2020%" y="645" width="1.0101%" height="15" fill="rgb(230,59,30)" fg:x="20" fg:w="1"/><text x="20.4520%" y="655.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 1.01%)</title><rect x="20.2020%" y="629" width="1.0101%" height="15" fill="rgb(209,121,21)" fg:x="20" fg:w="1"/><text x="20.4520%" y="639.50"></text></g><g><title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (1 samples, 1.01%)</title><rect x="20.2020%" y="613" width="1.0101%" height="15" fill="rgb(220,109,13)" fg:x="20" fg:w="1"/><text x="20.4520%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::remove (1 samples, 1.01%)</title><rect x="20.2020%" y="597" width="1.0101%" height="15" fill="rgb(232,18,1)" fg:x="20" fg:w="1"/><text x="20.4520%" y="607.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.01%)</title><rect x="21.2121%" y="805" width="1.0101%" height="15" fill="rgb(215,41,42)" fg:x="21" fg:w="1"/><text x="21.4621%" y="815.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (1 samples, 1.01%)</title><rect x="21.2121%" y="789" width="1.0101%" height="15" fill="rgb(224,123,36)" fg:x="21" fg:w="1"/><text x="21.4621%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.01%)</title><rect x="21.2121%" y="773" width="1.0101%" height="15" fill="rgb(240,125,3)" fg:x="21" fg:w="1"/><text x="21.4621%" y="783.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 1.01%)</title><rect x="21.2121%" y="757" width="1.0101%" height="15" fill="rgb(205,98,50)" fg:x="21" fg:w="1"/><text x="21.4621%" y="767.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 1.01%)</title><rect x="21.2121%" y="741" width="1.0101%" height="15" fill="rgb(205,185,37)" fg:x="21" fg:w="1"/><text x="21.4621%" y="751.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 1.01%)</title><rect x="21.2121%" y="725" width="1.0101%" height="15" fill="rgb(238,207,15)" fg:x="21" fg:w="1"/><text x="21.4621%" y="735.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="22.2222%" y="805" width="1.0101%" height="15" fill="rgb(213,199,42)" fg:x="22" fg:w="1"/><text x="22.4722%" y="815.50"></text></g><g><title>&lt;cranelift_codegen::isa::aarch64::AArch64Backend as cranelift_codegen::isa::TargetIsa&gt;::compile_function (24 samples, 24.24%)</title><rect x="0.0000%" y="837" width="24.2424%" height="15" fill="rgb(235,201,11)" fg:x="0" fg:w="24"/><text x="0.2500%" y="847.50">&lt;cranelift_codegen::isa::aarch64::AArch..</text></g><g><title>cranelift_codegen::machinst::vcode::VCode&lt;I&gt;::emit (3 samples, 3.03%)</title><rect x="21.2121%" y="821" width="3.0303%" height="15" fill="rgb(207,46,11)" fg:x="21" fg:w="3"/><text x="21.4621%" y="831.50">cra..</text></g><g><title>cranelift_codegen::machinst::vcode::VCode&lt;I&gt;::emit::_{{closure}} (1 samples, 1.01%)</title><rect x="23.2323%" y="805" width="1.0101%" height="15" fill="rgb(241,35,35)" fg:x="23" fg:w="1"/><text x="23.4823%" y="815.50"></text></g><g><title>cranelift_codegen::isa::aarch64::inst::emit::&lt;impl cranelift_codegen::machinst::MachInstEmit for cranelift_codegen::isa::aarch64::lower::isle::generated_code::MInst&gt;::emit (1 samples, 1.01%)</title><rect x="23.2323%" y="789" width="1.0101%" height="15" fill="rgb(243,32,47)" fg:x="23" fg:w="1"/><text x="23.4823%" y="799.50"></text></g><g><title>cranelift_codegen::machinst::reg::AllocationConsumer::next_writable (1 samples, 1.01%)</title><rect x="23.2323%" y="773" width="1.0101%" height="15" fill="rgb(247,202,23)" fg:x="23" fg:w="1"/><text x="23.4823%" y="783.50"></text></g><g><title>cranelift_codegen::machinst::reg::AllocationConsumer::next (1 samples, 1.01%)</title><rect x="23.2323%" y="757" width="1.0101%" height="15" fill="rgb(219,102,11)" fg:x="23" fg:w="1"/><text x="23.4823%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.01%)</title><rect x="23.2323%" y="741" width="1.0101%" height="15" fill="rgb(243,110,44)" fg:x="23" fg:w="1"/><text x="23.4823%" y="751.50"></text></g><g><title>wasmtime_cranelift::array_call_signature (1 samples, 1.01%)</title><rect x="24.2424%" y="821" width="1.0101%" height="15" fill="rgb(222,74,54)" fg:x="24" fg:w="1"/><text x="24.4924%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 1.01%)</title><rect x="24.2424%" y="805" width="1.0101%" height="15" fill="rgb(216,99,12)" fg:x="24" fg:w="1"/><text x="24.4924%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 1.01%)</title><rect x="24.2424%" y="789" width="1.0101%" height="15" fill="rgb(226,22,26)" fg:x="24" fg:w="1"/><text x="24.4924%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 1.01%)</title><rect x="24.2424%" y="773" width="1.0101%" height="15" fill="rgb(217,163,10)" fg:x="24" fg:w="1"/><text x="24.4924%" y="783.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_array_to_wasm_trampoline (2 samples, 2.02%)</title><rect x="24.2424%" y="837" width="2.0202%" height="15" fill="rgb(213,25,53)" fg:x="24" fg:w="2"/><text x="24.4924%" y="847.50">&lt;..</text></g><g><title>wasmtime_cranelift::compiler::declare_and_call (1 samples, 1.01%)</title><rect x="25.2525%" y="821" width="1.0101%" height="15" fill="rgb(252,105,26)" fg:x="25" fg:w="1"/><text x="25.5025%" y="831.50"></text></g><g><title>cranelift_codegen::ir::builder::InstBuilder::call (1 samples, 1.01%)</title><rect x="25.2525%" y="805" width="1.0101%" height="15" fill="rgb(220,39,43)" fg:x="25" fg:w="1"/><text x="25.5025%" y="815.50"></text></g><g><title>cranelift_entity::list::EntityList&lt;T&gt;::extend (1 samples, 1.01%)</title><rect x="25.2525%" y="789" width="1.0101%" height="15" fill="rgb(229,68,48)" fg:x="25" fg:w="1"/><text x="25.5025%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.01%)</title><rect x="25.2525%" y="773" width="1.0101%" height="15" fill="rgb(252,8,32)" fg:x="25" fg:w="1"/><text x="25.5025%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 1.01%)</title><rect x="25.2525%" y="757" width="1.0101%" height="15" fill="rgb(223,20,43)" fg:x="25" fg:w="1"/><text x="25.5025%" y="767.50"></text></g><g><title>cranelift_wasm::code_translator::translate_br_if (1 samples, 1.01%)</title><rect x="26.2626%" y="773" width="1.0101%" height="15" fill="rgb(229,81,49)" fg:x="26" fg:w="1"/><text x="26.5126%" y="783.50"></text></g><g><title>cranelift_frontend::frontend::FunctionBuilder::create_block (1 samples, 1.01%)</title><rect x="26.2626%" y="757" width="1.0101%" height="15" fill="rgb(236,28,36)" fg:x="26" fg:w="1"/><text x="26.5126%" y="767.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::make_block (1 samples, 1.01%)</title><rect x="26.2626%" y="741" width="1.0101%" height="15" fill="rgb(249,185,26)" fg:x="26" fg:w="1"/><text x="26.5126%" y="751.50"></text></g><g><title>cranelift_codegen::ir::dfg::Blocks::add (1 samples, 1.01%)</title><rect x="26.2626%" y="725" width="1.0101%" height="15" fill="rgb(249,174,33)" fg:x="26" fg:w="1"/><text x="26.5126%" y="735.50"></text></g><g><title>cranelift_entity::primary::PrimaryMap&lt;K,V&gt;::push (1 samples, 1.01%)</title><rect x="26.2626%" y="709" width="1.0101%" height="15" fill="rgb(233,201,37)" fg:x="26" fg:w="1"/><text x="26.5126%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 1.01%)</title><rect x="26.2626%" y="693" width="1.0101%" height="15" fill="rgb(221,78,26)" fg:x="26" fg:w="1"/><text x="26.5126%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 1.01%)</title><rect x="26.2626%" y="677" width="1.0101%" height="15" fill="rgb(250,127,30)" fg:x="26" fg:w="1"/><text x="26.5126%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.01%)</title><rect x="26.2626%" y="661" width="1.0101%" height="15" fill="rgb(230,49,44)" fg:x="26" fg:w="1"/><text x="26.5126%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.01%)</title><rect x="26.2626%" y="645" width="1.0101%" height="15" fill="rgb(229,67,23)" fg:x="26" fg:w="1"/><text x="26.5126%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 1.01%)</title><rect x="26.2626%" y="629" width="1.0101%" height="15" fill="rgb(249,83,47)" fg:x="26" fg:w="1"/><text x="26.5126%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 1.01%)</title><rect x="26.2626%" y="613" width="1.0101%" height="15" fill="rgb(215,43,3)" fg:x="26" fg:w="1"/><text x="26.5126%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 1.01%)</title><rect x="26.2626%" y="597" width="1.0101%" height="15" fill="rgb(238,154,13)" fg:x="26" fg:w="1"/><text x="26.5126%" y="607.50"></text></g><g><title>__GI___libc_realloc (1 samples, 1.01%)</title><rect x="26.2626%" y="581" width="1.0101%" height="15" fill="rgb(219,56,2)" fg:x="26" fg:w="1"/><text x="26.5126%" y="591.50"></text></g><g><title>_int_realloc (1 samples, 1.01%)</title><rect x="26.2626%" y="565" width="1.0101%" height="15" fill="rgb(233,0,4)" fg:x="26" fg:w="1"/><text x="26.5126%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 1.01%)</title><rect x="26.2626%" y="549" width="1.0101%" height="15" fill="rgb(235,30,7)" fg:x="26" fg:w="1"/><text x="26.5126%" y="559.50"></text></g><g><title>alloc_perturb (1 samples, 1.01%)</title><rect x="26.2626%" y="533" width="1.0101%" height="15" fill="rgb(250,79,13)" fg:x="26" fg:w="1"/><text x="26.5126%" y="543.50"></text></g><g><title>cranelift_wasm::code_translator::translate_operator (2 samples, 2.02%)</title><rect x="26.2626%" y="789" width="2.0202%" height="15" fill="rgb(211,146,34)" fg:x="26" fg:w="2"/><text x="26.5126%" y="799.50">c..</text></g><g><title>cranelift_wasm::code_translator::translate_load (1 samples, 1.01%)</title><rect x="27.2727%" y="773" width="1.0101%" height="15" fill="rgb(228,22,38)" fg:x="27" fg:w="1"/><text x="27.5227%" y="783.50"></text></g><g><title>cranelift_wasm::code_translator::prepare_addr (1 samples, 1.01%)</title><rect x="27.2727%" y="757" width="1.0101%" height="15" fill="rgb(235,168,5)" fg:x="27" fg:w="1"/><text x="27.5227%" y="767.50"></text></g><g><title>cranelift_wasm::state::FuncTranslationState::get_heap (1 samples, 1.01%)</title><rect x="27.2727%" y="741" width="1.0101%" height="15" fill="rgb(221,155,16)" fg:x="27" fg:w="1"/><text x="27.5227%" y="751.50"></text></g><g><title>&lt;wasmtime_cranelift::func_environ::FuncEnvironment as cranelift_wasm::environ::spec::FuncEnvironment&gt;::make_heap (1 samples, 1.01%)</title><rect x="27.2727%" y="725" width="1.0101%" height="15" fill="rgb(215,215,53)" fg:x="27" fg:w="1"/><text x="27.5227%" y="735.50"></text></g><g><title>cranelift_wasm::func_translator::parse_function_body (3 samples, 3.03%)</title><rect x="26.2626%" y="805" width="3.0303%" height="15" fill="rgb(223,4,10)" fg:x="26" fg:w="3"/><text x="26.5126%" y="815.50">cra..</text></g><g><title>wasmparser::validator::func::FuncValidator&lt;T&gt;::op (1 samples, 1.01%)</title><rect x="28.2828%" y="789" width="1.0101%" height="15" fill="rgb(234,103,6)" fg:x="28" fg:w="1"/><text x="28.5328%" y="799.50"></text></g><g><title>wasmparser::readers::core::operators::VisitOperator::visit_operator (1 samples, 1.01%)</title><rect x="28.2828%" y="773" width="1.0101%" height="15" fill="rgb(227,97,0)" fg:x="28" fg:w="1"/><text x="28.5328%" y="783.50"></text></g><g><title>&lt;wasmparser::validator::operators::WasmProposalValidator&lt;T&gt; as wasmparser::readers::core::operators::VisitOperator&gt;::visit_i32_const (1 samples, 1.01%)</title><rect x="28.2828%" y="757" width="1.0101%" height="15" fill="rgb(234,150,53)" fg:x="28" fg:w="1"/><text x="28.5328%" y="767.50"></text></g><g><title>cranelift_wasm::func_translator::FuncTranslator::translate_body (4 samples, 4.04%)</title><rect x="26.2626%" y="821" width="4.0404%" height="15" fill="rgb(228,201,54)" fg:x="26" fg:w="4"/><text x="26.5126%" y="831.50">cran..</text></g><g><title>cranelift_wasm::func_translator::parse_local_decls (1 samples, 1.01%)</title><rect x="29.2929%" y="805" width="1.0101%" height="15" fill="rgb(222,22,37)" fg:x="29" fg:w="1"/><text x="29.5429%" y="815.50"></text></g><g><title>cranelift_wasm::func_translator::declare_locals (1 samples, 1.01%)</title><rect x="29.2929%" y="789" width="1.0101%" height="15" fill="rgb(237,53,32)" fg:x="29" fg:w="1"/><text x="29.5429%" y="799.50"></text></g><g><title>cranelift_frontend::frontend::FunctionBuilder::def_var (1 samples, 1.01%)</title><rect x="29.2929%" y="773" width="1.0101%" height="15" fill="rgb(233,25,53)" fg:x="29" fg:w="1"/><text x="29.5429%" y="783.50"></text></g><g><title>cranelift_frontend::frontend::FunctionBuilder::try_def_var (1 samples, 1.01%)</title><rect x="29.2929%" y="757" width="1.0101%" height="15" fill="rgb(210,40,34)" fg:x="29" fg:w="1"/><text x="29.5429%" y="767.50"></text></g><g><title>cranelift_frontend::ssa::SSABuilder::def_var (1 samples, 1.01%)</title><rect x="29.2929%" y="741" width="1.0101%" height="15" fill="rgb(241,220,44)" fg:x="29" fg:w="1"/><text x="29.5429%" y="751.50"></text></g><g><title>&lt;cranelift_entity::map::SecondaryMap&lt;K,V&gt; as core::ops::index::IndexMut&lt;K&gt;&gt;::index_mut (1 samples, 1.01%)</title><rect x="29.2929%" y="725" width="1.0101%" height="15" fill="rgb(235,28,35)" fg:x="29" fg:w="1"/><text x="29.5429%" y="735.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize_for_index_mut (1 samples, 1.01%)</title><rect x="29.2929%" y="709" width="1.0101%" height="15" fill="rgb(210,56,17)" fg:x="29" fg:w="1"/><text x="29.5429%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 1.01%)</title><rect x="29.2929%" y="693" width="1.0101%" height="15" fill="rgb(224,130,29)" fg:x="29" fg:w="1"/><text x="29.5429%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 1.01%)</title><rect x="29.2929%" y="677" width="1.0101%" height="15" fill="rgb(235,212,8)" fg:x="29" fg:w="1"/><text x="29.5429%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="29.2929%" y="661" width="1.0101%" height="15" fill="rgb(223,33,50)" fg:x="29" fg:w="1"/><text x="29.5429%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="29.2929%" y="645" width="1.0101%" height="15" fill="rgb(219,149,13)" fg:x="29" fg:w="1"/><text x="29.5429%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.01%)</title><rect x="29.2929%" y="629" width="1.0101%" height="15" fill="rgb(250,156,29)" fg:x="29" fg:w="1"/><text x="29.5429%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.01%)</title><rect x="29.2929%" y="613" width="1.0101%" height="15" fill="rgb(216,193,19)" fg:x="29" fg:w="1"/><text x="29.5429%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.01%)</title><rect x="29.2929%" y="597" width="1.0101%" height="15" fill="rgb(216,135,14)" fg:x="29" fg:w="1"/><text x="29.5429%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 1.01%)</title><rect x="29.2929%" y="581" width="1.0101%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="1"/><text x="29.5429%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 1.01%)</title><rect x="29.2929%" y="565" width="1.0101%" height="15" fill="rgb(233,42,35)" fg:x="29" fg:w="1"/><text x="29.5429%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 1.01%)</title><rect x="29.2929%" y="549" width="1.0101%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="29.5429%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 1.01%)</title><rect x="29.2929%" y="533" width="1.0101%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="29.5429%" y="543.50"></text></g><g><title>_int_realloc (1 samples, 1.01%)</title><rect x="29.2929%" y="517" width="1.0101%" height="15" fill="rgb(254,173,49)" fg:x="29" fg:w="1"/><text x="29.5429%" y="527.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_function (5 samples, 5.05%)</title><rect x="26.2626%" y="837" width="5.0505%" height="15" fill="rgb(221,1,38)" fg:x="26" fg:w="5"/><text x="26.5126%" y="847.50">&lt;wasmt..</text></g><g><title>wasmtime_cranelift::wasm_call_signature (1 samples, 1.01%)</title><rect x="30.3030%" y="821" width="1.0101%" height="15" fill="rgb(206,124,46)" fg:x="30" fg:w="1"/><text x="30.5530%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 1.01%)</title><rect x="30.3030%" y="805" width="1.0101%" height="15" fill="rgb(249,21,11)" fg:x="30" fg:w="1"/><text x="30.5530%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 1.01%)</title><rect x="30.3030%" y="789" width="1.0101%" height="15" fill="rgb(222,201,40)" fg:x="30" fg:w="1"/><text x="30.5530%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 1.01%)</title><rect x="30.3030%" y="773" width="1.0101%" height="15" fill="rgb(235,61,29)" fg:x="30" fg:w="1"/><text x="30.5530%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="30.3030%" y="757" width="1.0101%" height="15" fill="rgb(219,207,3)" fg:x="30" fg:w="1"/><text x="30.5530%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="30.3030%" y="741" width="1.0101%" height="15" fill="rgb(222,56,46)" fg:x="30" fg:w="1"/><text x="30.5530%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.01%)</title><rect x="30.3030%" y="725" width="1.0101%" height="15" fill="rgb(239,76,54)" fg:x="30" fg:w="1"/><text x="30.5530%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.01%)</title><rect x="30.3030%" y="709" width="1.0101%" height="15" fill="rgb(231,124,27)" fg:x="30" fg:w="1"/><text x="30.5530%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.01%)</title><rect x="30.3030%" y="693" width="1.0101%" height="15" fill="rgb(249,195,6)" fg:x="30" fg:w="1"/><text x="30.5530%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 1.01%)</title><rect x="30.3030%" y="677" width="1.0101%" height="15" fill="rgb(237,174,47)" fg:x="30" fg:w="1"/><text x="30.5530%" y="687.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::compile_native_to_wasm_trampoline (1 samples, 1.01%)</title><rect x="31.3131%" y="837" width="1.0101%" height="15" fill="rgb(206,201,31)" fg:x="31" fg:w="1"/><text x="31.5631%" y="847.50"></text></g><g><title>wasmtime_cranelift::compiler::declare_and_call (1 samples, 1.01%)</title><rect x="31.3131%" y="821" width="1.0101%" height="15" fill="rgb(231,57,52)" fg:x="31" fg:w="1"/><text x="31.5631%" y="831.50"></text></g><g><title>cranelift_codegen::ir::function::FunctionParameters::ensure_user_func_name (1 samples, 1.01%)</title><rect x="31.3131%" y="805" width="1.0101%" height="15" fill="rgb(248,177,22)" fg:x="31" fg:w="1"/><text x="31.5631%" y="815.50"></text></g><g><title>cranelift_entity::primary::PrimaryMap&lt;K,V&gt;::push (1 samples, 1.01%)</title><rect x="31.3131%" y="789" width="1.0101%" height="15" fill="rgb(215,211,37)" fg:x="31" fg:w="1"/><text x="31.5631%" y="799.50"></text></g><g><title>cranelift_entity::primary::PrimaryMap&lt;K,V&gt;::next_key (1 samples, 1.01%)</title><rect x="31.3131%" y="773" width="1.0101%" height="15" fill="rgb(241,128,51)" fg:x="31" fg:w="1"/><text x="31.5631%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 1.01%)</title><rect x="31.3131%" y="757" width="1.0101%" height="15" fill="rgb(227,165,31)" fg:x="31" fg:w="1"/><text x="31.5631%" y="767.50"></text></g><g><title>__libc_start_main_impl (1 samples, 1.01%)</title><rect x="32.3232%" y="837" width="1.0101%" height="15" fill="rgb(228,167,24)" fg:x="32" fg:w="1"/><text x="32.5732%" y="847.50"></text></g><g><title>__libc_start_call_main (1 samples, 1.01%)</title><rect x="32.3232%" y="821" width="1.0101%" height="15" fill="rgb(228,143,12)" fg:x="32" fg:w="1"/><text x="32.5732%" y="831.50"></text></g><g><title>main (1 samples, 1.01%)</title><rect x="32.3232%" y="805" width="1.0101%" height="15" fill="rgb(249,149,8)" fg:x="32" fg:w="1"/><text x="32.5732%" y="815.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 1.01%)</title><rect x="32.3232%" y="789" width="1.0101%" height="15" fill="rgb(243,35,44)" fg:x="32" fg:w="1"/><text x="32.5732%" y="799.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 1.01%)</title><rect x="32.3232%" y="773" width="1.0101%" height="15" fill="rgb(246,89,9)" fg:x="32" fg:w="1"/><text x="32.5732%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 1.01%)</title><rect x="32.3232%" y="757" width="1.0101%" height="15" fill="rgb(233,213,13)" fg:x="32" fg:w="1"/><text x="32.5732%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.01%)</title><rect x="32.3232%" y="741" width="1.0101%" height="15" fill="rgb(233,141,41)" fg:x="32" fg:w="1"/><text x="32.5732%" y="751.50"></text></g><g><title>host::main (1 samples, 1.01%)</title><rect x="32.3232%" y="725" width="1.0101%" height="15" fill="rgb(239,167,4)" fg:x="32" fg:w="1"/><text x="32.5732%" y="735.50"></text></g><g><title>host::execute (1 samples, 1.01%)</title><rect x="32.3232%" y="709" width="1.0101%" height="15" fill="rgb(209,217,16)" fg:x="32" fg:w="1"/><text x="32.5732%" y="719.50"></text></g><g><title>wasmtime::runtime::component::component::Component::from_file (1 samples, 1.01%)</title><rect x="32.3232%" y="693" width="1.0101%" height="15" fill="rgb(219,88,35)" fg:x="32" fg:w="1"/><text x="32.5732%" y="703.50"></text></g><g><title>wasmtime::runtime::component::component::Component::new (1 samples, 1.01%)</title><rect x="32.3232%" y="677" width="1.0101%" height="15" fill="rgb(220,193,23)" fg:x="32" fg:w="1"/><text x="32.5732%" y="687.50"></text></g><g><title>wasmtime::runtime::component::component::Component::from_binary (1 samples, 1.01%)</title><rect x="32.3232%" y="661" width="1.0101%" height="15" fill="rgb(230,90,52)" fg:x="32" fg:w="1"/><text x="32.5732%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.01%)</title><rect x="32.3232%" y="645" width="1.0101%" height="15" fill="rgb(252,106,19)" fg:x="32" fg:w="1"/><text x="32.5732%" y="655.50"></text></g><g><title>wasmtime::runtime::component::component::Component::from_binary::_{{closure}} (1 samples, 1.01%)</title><rect x="32.3232%" y="629" width="1.0101%" height="15" fill="rgb(206,74,20)" fg:x="32" fg:w="1"/><text x="32.5732%" y="639.50"></text></g><g><title>wasmtime::compile::build_component_artifacts (1 samples, 1.01%)</title><rect x="32.3232%" y="613" width="1.0101%" height="15" fill="rgb(230,138,44)" fg:x="32" fg:w="1"/><text x="32.5732%" y="623.50"></text></g><g><title>wasmtime::compile::CompileInputs::compile (1 samples, 1.01%)</title><rect x="32.3232%" y="597" width="1.0101%" height="15" fill="rgb(235,182,43)" fg:x="32" fg:w="1"/><text x="32.5732%" y="607.50"></text></g><g><title>wasmtime::engine::Engine::run_maybe_parallel (1 samples, 1.01%)</title><rect x="32.3232%" y="581" width="1.0101%" height="15" fill="rgb(242,16,51)" fg:x="32" fg:w="1"/><text x="32.5732%" y="591.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (1 samples, 1.01%)</title><rect x="32.3232%" y="565" width="1.0101%" height="15" fill="rgb(248,9,4)" fg:x="32" fg:w="1"/><text x="32.5732%" y="575.50"></text></g><g><title>rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter (1 samples, 1.01%)</title><rect x="32.3232%" y="549" width="1.0101%" height="15" fill="rgb(210,31,22)" fg:x="32" fg:w="1"/><text x="32.5732%" y="559.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (1 samples, 1.01%)</title><rect x="32.3232%" y="533" width="1.0101%" height="15" fill="rgb(239,54,39)" fg:x="32" fg:w="1"/><text x="32.5732%" y="543.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (1 samples, 1.01%)</title><rect x="32.3232%" y="517" width="1.0101%" height="15" fill="rgb(230,99,41)" fg:x="32" fg:w="1"/><text x="32.5732%" y="527.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (1 samples, 1.01%)</title><rect x="32.3232%" y="501" width="1.0101%" height="15" fill="rgb(253,106,12)" fg:x="32" fg:w="1"/><text x="32.5732%" y="511.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (1 samples, 1.01%)</title><rect x="32.3232%" y="485" width="1.0101%" height="15" fill="rgb(213,46,41)" fg:x="32" fg:w="1"/><text x="32.5732%" y="495.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSome&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 1.01%)</title><rect x="32.3232%" y="469" width="1.0101%" height="15" fill="rgb(215,133,35)" fg:x="32" fg:w="1"/><text x="32.5732%" y="479.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 1.01%)</title><rect x="32.3232%" y="453" width="1.0101%" height="15" fill="rgb(213,28,5)" fg:x="32" fg:w="1"/><text x="32.5732%" y="463.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 1.01%)</title><rect x="32.3232%" y="437" width="1.0101%" height="15" fill="rgb(215,77,49)" fg:x="32" fg:w="1"/><text x="32.5732%" y="447.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (1 samples, 1.01%)</title><rect x="32.3232%" y="421" width="1.0101%" height="15" fill="rgb(248,100,22)" fg:x="32" fg:w="1"/><text x="32.5732%" y="431.50"></text></g><g><title>rayon::iter::plumbing::bridge (1 samples, 1.01%)</title><rect x="32.3232%" y="405" width="1.0101%" height="15" fill="rgb(208,67,9)" fg:x="32" fg:w="1"/><text x="32.5732%" y="415.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1 samples, 1.01%)</title><rect x="32.3232%" y="389" width="1.0101%" height="15" fill="rgb(219,133,21)" fg:x="32" fg:w="1"/><text x="32.5732%" y="399.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (1 samples, 1.01%)</title><rect x="32.3232%" y="373" width="1.0101%" height="15" fill="rgb(246,46,29)" fg:x="32" fg:w="1"/><text x="32.5732%" y="383.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (1 samples, 1.01%)</title><rect x="32.3232%" y="357" width="1.0101%" height="15" fill="rgb(246,185,52)" fg:x="32" fg:w="1"/><text x="32.5732%" y="367.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (1 samples, 1.01%)</title><rect x="32.3232%" y="341" width="1.0101%" height="15" fill="rgb(252,136,11)" fg:x="32" fg:w="1"/><text x="32.5732%" y="351.50"></text></g><g><title>rayon::iter::plumbing::LengthSplitter::new (1 samples, 1.01%)</title><rect x="32.3232%" y="325" width="1.0101%" height="15" fill="rgb(219,138,53)" fg:x="32" fg:w="1"/><text x="32.5732%" y="335.50"></text></g><g><title>rayon::iter::plumbing::Splitter::new (1 samples, 1.01%)</title><rect x="32.3232%" y="309" width="1.0101%" height="15" fill="rgb(211,51,23)" fg:x="32" fg:w="1"/><text x="32.5732%" y="319.50"></text></g><g><title>rayon_core::current_num_threads (1 samples, 1.01%)</title><rect x="32.3232%" y="293" width="1.0101%" height="15" fill="rgb(247,221,28)" fg:x="32" fg:w="1"/><text x="32.5732%" y="303.50"></text></g><g><title>rayon_core::registry::Registry::current_num_threads (1 samples, 1.01%)</title><rect x="32.3232%" y="277" width="1.0101%" height="15" fill="rgb(251,222,45)" fg:x="32" fg:w="1"/><text x="32.5732%" y="287.50"></text></g><g><title>rayon_core::registry::global_registry (1 samples, 1.01%)</title><rect x="32.3232%" y="261" width="1.0101%" height="15" fill="rgb(217,162,53)" fg:x="32" fg:w="1"/><text x="32.5732%" y="271.50"></text></g><g><title>rayon_core::registry::set_global_registry (1 samples, 1.01%)</title><rect x="32.3232%" y="245" width="1.0101%" height="15" fill="rgb(229,93,14)" fg:x="32" fg:w="1"/><text x="32.5732%" y="255.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 1.01%)</title><rect x="32.3232%" y="229" width="1.0101%" height="15" fill="rgb(209,67,49)" fg:x="32" fg:w="1"/><text x="32.5732%" y="239.50"></text></g><g><title>std::sys_common::once::futex::Once::call (1 samples, 1.01%)</title><rect x="32.3232%" y="213" width="1.0101%" height="15" fill="rgb(213,87,29)" fg:x="32" fg:w="1"/><text x="32.5732%" y="223.50"></text></g><g><title>std::sync::once::Once::call_once::_{{closure}} (1 samples, 1.01%)</title><rect x="32.3232%" y="197" width="1.0101%" height="15" fill="rgb(205,151,52)" fg:x="32" fg:w="1"/><text x="32.5732%" y="207.50"></text></g><g><title>rayon_core::registry::set_global_registry::_{{closure}} (1 samples, 1.01%)</title><rect x="32.3232%" y="181" width="1.0101%" height="15" fill="rgb(253,215,39)" fg:x="32" fg:w="1"/><text x="32.5732%" y="191.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.01%)</title><rect x="32.3232%" y="165" width="1.0101%" height="15" fill="rgb(221,220,41)" fg:x="32" fg:w="1"/><text x="32.5732%" y="175.50"></text></g><g><title>rayon_core::registry::default_global_registry (1 samples, 1.01%)</title><rect x="32.3232%" y="149" width="1.0101%" height="15" fill="rgb(218,133,21)" fg:x="32" fg:w="1"/><text x="32.5732%" y="159.50"></text></g><g><title>rayon_core::registry::Registry::new (1 samples, 1.01%)</title><rect x="32.3232%" y="133" width="1.0101%" height="15" fill="rgb(221,193,43)" fg:x="32" fg:w="1"/><text x="32.5732%" y="143.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::get_num_threads (1 samples, 1.01%)</title><rect x="32.3232%" y="117" width="1.0101%" height="15" fill="rgb(240,128,52)" fg:x="32" fg:w="1"/><text x="32.5732%" y="127.50"></text></g><g><title>rayon_core::ThreadPoolBuilder&lt;S&gt;::get_num_threads::_{{closure}} (1 samples, 1.01%)</title><rect x="32.3232%" y="101" width="1.0101%" height="15" fill="rgb(253,114,12)" fg:x="32" fg:w="1"/><text x="32.5732%" y="111.50"></text></g><g><title>std::thread::available_parallelism (1 samples, 1.01%)</title><rect x="32.3232%" y="85" width="1.0101%" height="15" fill="rgb(215,223,47)" fg:x="32" fg:w="1"/><text x="32.5732%" y="95.50"></text></g><g><title>std::sys_common::fs::try_exists (1 samples, 1.01%)</title><rect x="32.3232%" y="69" width="1.0101%" height="15" fill="rgb(248,225,23)" fg:x="32" fg:w="1"/><text x="32.5732%" y="79.50"></text></g><g><title>std::sys::unix::fs::stat (1 samples, 1.01%)</title><rect x="32.3232%" y="53" width="1.0101%" height="15" fill="rgb(250,108,0)" fg:x="32" fg:w="1"/><text x="32.5732%" y="63.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="32.3232%" y="37" width="1.0101%" height="15" fill="rgb(228,208,7)" fg:x="32" fg:w="1"/><text x="32.5732%" y="47.50"></text></g><g><title>[unknown] (1 samples, 1.01%)</title><rect x="36.3636%" y="821" width="1.0101%" height="15" fill="rgb(244,45,10)" fg:x="36" fg:w="1"/><text x="36.6136%" y="831.50"></text></g><g><title>[unknown] (1 samples, 1.01%)</title><rect x="36.3636%" y="805" width="1.0101%" height="15" fill="rgb(207,125,25)" fg:x="36" fg:w="1"/><text x="36.6136%" y="815.50"></text></g><g><title>[unknown] (1 samples, 1.01%)</title><rect x="36.3636%" y="789" width="1.0101%" height="15" fill="rgb(210,195,18)" fg:x="36" fg:w="1"/><text x="36.6136%" y="799.50"></text></g><g><title>&lt;host::display::DeviceState as host::device::Device&gt;::new (1 samples, 1.01%)</title><rect x="37.3737%" y="677" width="1.0101%" height="15" fill="rgb(249,80,12)" fg:x="37" fg:w="1"/><text x="37.6237%" y="687.50"></text></g><g><title>host::display::_::&lt;impl host::display::Screen&gt;::instantiate (1 samples, 1.01%)</title><rect x="37.3737%" y="661" width="1.0101%" height="15" fill="rgb(221,65,9)" fg:x="37" fg:w="1"/><text x="37.6237%" y="671.50"></text></g><g><title>wasmtime::runtime::component::linker::Linker&lt;T&gt;::instantiate (1 samples, 1.01%)</title><rect x="37.3737%" y="645" width="1.0101%" height="15" fill="rgb(235,49,36)" fg:x="37" fg:w="1"/><text x="37.6237%" y="655.50"></text></g><g><title>wasmtime::runtime::component::linker::Linker&lt;T&gt;::instantiate_pre (1 samples, 1.01%)</title><rect x="37.3737%" y="629" width="1.0101%" height="15" fill="rgb(225,32,20)" fg:x="37" fg:w="1"/><text x="37.6237%" y="639.50"></text></g><g><title>wasmtime::runtime::component::component::Component::resource_drop_func_ref (1 samples, 1.01%)</title><rect x="37.3737%" y="613" width="1.0101%" height="15" fill="rgb(215,141,46)" fg:x="37" fg:w="1"/><text x="37.6237%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.01%)</title><rect x="37.3737%" y="597" width="1.0101%" height="15" fill="rgb(250,160,47)" fg:x="37" fg:w="1"/><text x="37.6237%" y="607.50"></text></g><g><title>wasmtime::runtime::component::component::Component::resource_drop_func_ref::_{{closure}} (1 samples, 1.01%)</title><rect x="37.3737%" y="581" width="1.0101%" height="15" fill="rgb(216,222,40)" fg:x="37" fg:w="1"/><text x="37.6237%" y="591.50"></text></g><g><title>wasmtime::runtime::component::component::Component::func (1 samples, 1.01%)</title><rect x="37.3737%" y="565" width="1.0101%" height="15" fill="rgb(234,217,39)" fg:x="37" fg:w="1"/><text x="37.6237%" y="575.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 1.01%)</title><rect x="37.3737%" y="549" width="1.0101%" height="15" fill="rgb(207,178,40)" fg:x="37" fg:w="1"/><text x="37.6237%" y="559.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 1.01%)</title><rect x="37.3737%" y="533" width="1.0101%" height="15" fill="rgb(221,136,13)" fg:x="37" fg:w="1"/><text x="37.6237%" y="543.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 1.01%)</title><rect x="37.3737%" y="517" width="1.0101%" height="15" fill="rgb(249,199,10)" fg:x="37" fg:w="1"/><text x="37.6237%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 1.01%)</title><rect x="37.3737%" y="501" width="1.0101%" height="15" fill="rgb(249,222,13)" fg:x="37" fg:w="1"/><text x="37.6237%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 1.01%)</title><rect x="37.3737%" y="485" width="1.0101%" height="15" fill="rgb(244,185,38)" fg:x="37" fg:w="1"/><text x="37.6237%" y="495.50"></text></g><g><title>wasmtime::engine::Engine::new (1 samples, 1.01%)</title><rect x="38.3838%" y="677" width="1.0101%" height="15" fill="rgb(236,202,9)" fg:x="38" fg:w="1"/><text x="38.6338%" y="687.50"></text></g><g><title>wasmtime::config::Config::build_compiler (1 samples, 1.01%)</title><rect x="38.3838%" y="661" width="1.0101%" height="15" fill="rgb(250,229,37)" fg:x="38" fg:w="1"/><text x="38.6338%" y="671.50"></text></g><g><title>wasmtime_cranelift::builder::builder (1 samples, 1.01%)</title><rect x="38.3838%" y="645" width="1.0101%" height="15" fill="rgb(206,174,23)" fg:x="38" fg:w="1"/><text x="38.6338%" y="655.50"></text></g><g><title>wasmtime_cranelift_shared::isa_builder::IsaBuilder&lt;T&gt;::new (1 samples, 1.01%)</title><rect x="38.3838%" y="629" width="1.0101%" height="15" fill="rgb(211,33,43)" fg:x="38" fg:w="1"/><text x="38.6338%" y="639.50"></text></g><g><title>cranelift_native::infer_native_flags (1 samples, 1.01%)</title><rect x="38.3838%" y="613" width="1.0101%" height="15" fill="rgb(245,58,50)" fg:x="38" fg:w="1"/><text x="38.6338%" y="623.50"></text></g><g><title>std_detect::detect::cache::detect_and_initialize (1 samples, 1.01%)</title><rect x="38.3838%" y="597" width="1.0101%" height="15" fill="rgb(244,68,36)" fg:x="38" fg:w="1"/><text x="38.6338%" y="607.50"></text></g><g><title>wasmtime::runtime::component::component::Component::from_file (1 samples, 1.01%)</title><rect x="39.3939%" y="677" width="1.0101%" height="15" fill="rgb(232,229,15)" fg:x="39" fg:w="1"/><text x="39.6439%" y="687.50"></text></g><g><title>wasmtime::runtime::component::component::Component::new (1 samples, 1.01%)</title><rect x="39.3939%" y="661" width="1.0101%" height="15" fill="rgb(254,30,23)" fg:x="39" fg:w="1"/><text x="39.6439%" y="671.50"></text></g><g><title>wasmtime::runtime::component::component::Component::from_binary (1 samples, 1.01%)</title><rect x="39.3939%" y="645" width="1.0101%" height="15" fill="rgb(235,160,14)" fg:x="39" fg:w="1"/><text x="39.6439%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.01%)</title><rect x="39.3939%" y="629" width="1.0101%" height="15" fill="rgb(212,155,44)" fg:x="39" fg:w="1"/><text x="39.6439%" y="639.50"></text></g><g><title>wasmtime::runtime::component::component::Component::from_binary::_{{closure}} (1 samples, 1.01%)</title><rect x="39.3939%" y="613" width="1.0101%" height="15" fill="rgb(226,2,50)" fg:x="39" fg:w="1"/><text x="39.6439%" y="623.50"></text></g><g><title>wasmtime::compile::build_component_artifacts (1 samples, 1.01%)</title><rect x="39.3939%" y="597" width="1.0101%" height="15" fill="rgb(234,177,6)" fg:x="39" fg:w="1"/><text x="39.6439%" y="607.50"></text></g><g><title>wasmtime::compile::FunctionIndices::link_and_append_code (1 samples, 1.01%)</title><rect x="39.3939%" y="581" width="1.0101%" height="15" fill="rgb(217,24,9)" fg:x="39" fg:w="1"/><text x="39.6439%" y="591.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::append_code (1 samples, 1.01%)</title><rect x="39.3939%" y="565" width="1.0101%" height="15" fill="rgb(220,13,46)" fg:x="39" fg:w="1"/><text x="39.6439%" y="575.50"></text></g><g><title>wasmtime_cranelift_shared::obj::ModuleTextBuilder::append_func (1 samples, 1.01%)</title><rect x="39.3939%" y="549" width="1.0101%" height="15" fill="rgb(239,221,27)" fg:x="39" fg:w="1"/><text x="39.6439%" y="559.50"></text></g><g><title>cranelift_codegen::machinst::buffer::MachBufferFinalized&lt;T&gt;::data (1 samples, 1.01%)</title><rect x="39.3939%" y="533" width="1.0101%" height="15" fill="rgb(222,198,25)" fg:x="39" fg:w="1"/><text x="39.6439%" y="543.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 1.01%)</title><rect x="39.3939%" y="517" width="1.0101%" height="15" fill="rgb(211,99,13)" fg:x="39" fg:w="1"/><text x="39.6439%" y="527.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 1.01%)</title><rect x="39.3939%" y="501" width="1.0101%" height="15" fill="rgb(232,111,31)" fg:x="39" fg:w="1"/><text x="39.6439%" y="511.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 1.01%)</title><rect x="39.3939%" y="485" width="1.0101%" height="15" fill="rgb(245,82,37)" fg:x="39" fg:w="1"/><text x="39.6439%" y="495.50"></text></g><g><title>__libc_start_main_impl (4 samples, 4.04%)</title><rect x="37.3737%" y="821" width="4.0404%" height="15" fill="rgb(227,149,46)" fg:x="37" fg:w="4"/><text x="37.6237%" y="831.50">__li..</text></g><g><title>__libc_start_call_main (4 samples, 4.04%)</title><rect x="37.3737%" y="805" width="4.0404%" height="15" fill="rgb(218,36,50)" fg:x="37" fg:w="4"/><text x="37.6237%" y="815.50">__li..</text></g><g><title>main (4 samples, 4.04%)</title><rect x="37.3737%" y="789" width="4.0404%" height="15" fill="rgb(226,80,48)" fg:x="37" fg:w="4"/><text x="37.6237%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (4 samples, 4.04%)</title><rect x="37.3737%" y="773" width="4.0404%" height="15" fill="rgb(238,224,15)" fg:x="37" fg:w="4"/><text x="37.6237%" y="783.50">std:..</text></g><g><title>std::rt::lang_start::_{{closure}} (4 samples, 4.04%)</title><rect x="37.3737%" y="757" width="4.0404%" height="15" fill="rgb(241,136,10)" fg:x="37" fg:w="4"/><text x="37.6237%" y="767.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 4.04%)</title><rect x="37.3737%" y="741" width="4.0404%" height="15" fill="rgb(208,32,45)" fg:x="37" fg:w="4"/><text x="37.6237%" y="751.50">std:..</text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 4.04%)</title><rect x="37.3737%" y="725" width="4.0404%" height="15" fill="rgb(207,135,9)" fg:x="37" fg:w="4"/><text x="37.6237%" y="735.50">core..</text></g><g><title>host::main (4 samples, 4.04%)</title><rect x="37.3737%" y="709" width="4.0404%" height="15" fill="rgb(206,86,44)" fg:x="37" fg:w="4"/><text x="37.6237%" y="719.50">host..</text></g><g><title>host::execute (4 samples, 4.04%)</title><rect x="37.3737%" y="693" width="4.0404%" height="15" fill="rgb(245,177,15)" fg:x="37" fg:w="4"/><text x="37.6237%" y="703.50">host..</text></g><g><title>wasmtime_wasi::command::sync::add_to_linker (1 samples, 1.01%)</title><rect x="40.4040%" y="677" width="1.0101%" height="15" fill="rgb(206,64,50)" fg:x="40" fg:w="1"/><text x="40.6540%" y="687.50"></text></g><g><title>wasmtime_wasi::bindings::wasi::sockets::tcp::add_to_linker (1 samples, 1.01%)</title><rect x="40.4040%" y="661" width="1.0101%" height="15" fill="rgb(234,36,40)" fg:x="40" fg:w="1"/><text x="40.6540%" y="671.50"></text></g><g><title>wasmtime::runtime::component::linker::LinkerInstance&lt;T&gt;::func_wrap (1 samples, 1.01%)</title><rect x="40.4040%" y="645" width="1.0101%" height="15" fill="rgb(213,64,8)" fg:x="40" fg:w="1"/><text x="40.6540%" y="655.50"></text></g><g><title>__GI___tunables_init (1 samples, 1.01%)</title><rect x="43.4343%" y="773" width="1.0101%" height="15" fill="rgb(210,75,36)" fg:x="43" fg:w="1"/><text x="43.6843%" y="783.50"></text></g><g><title>_dl_map_object_deps (1 samples, 1.01%)</title><rect x="44.4444%" y="757" width="1.0101%" height="15" fill="rgb(229,88,21)" fg:x="44" fg:w="1"/><text x="44.6944%" y="767.50"></text></g><g><title>_start (13 samples, 13.13%)</title><rect x="33.3333%" y="837" width="13.1313%" height="15" fill="rgb(252,204,47)" fg:x="33" fg:w="13"/><text x="33.5833%" y="847.50">_start</text></g><g><title>_dl_start (5 samples, 5.05%)</title><rect x="41.4141%" y="821" width="5.0505%" height="15" fill="rgb(208,77,27)" fg:x="41" fg:w="5"/><text x="41.6641%" y="831.50">_dl_st..</text></g><g><title>_dl_start_final (3 samples, 3.03%)</title><rect x="43.4343%" y="805" width="3.0303%" height="15" fill="rgb(221,76,26)" fg:x="43" fg:w="3"/><text x="43.6843%" y="815.50">_dl..</text></g><g><title>_dl_sysdep_start (3 samples, 3.03%)</title><rect x="43.4343%" y="789" width="3.0303%" height="15" fill="rgb(225,139,18)" fg:x="43" fg:w="3"/><text x="43.6843%" y="799.50">_dl..</text></g><g><title>dl_main (2 samples, 2.02%)</title><rect x="44.4444%" y="773" width="2.0202%" height="15" fill="rgb(230,137,11)" fg:x="44" fg:w="2"/><text x="44.6944%" y="783.50">d..</text></g><g><title>_dl_relocate_object (1 samples, 1.01%)</title><rect x="45.4545%" y="757" width="1.0101%" height="15" fill="rgb(212,28,1)" fg:x="45" fg:w="1"/><text x="45.7045%" y="767.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 1.01%)</title><rect x="45.4545%" y="741" width="1.0101%" height="15" fill="rgb(248,164,17)" fg:x="45" fg:w="1"/><text x="45.7045%" y="751.50"></text></g><g><title>elf_machine_rela_relative (1 samples, 1.01%)</title><rect x="45.4545%" y="725" width="1.0101%" height="15" fill="rgb(222,171,42)" fg:x="45" fg:w="1"/><text x="45.7045%" y="735.50"></text></g><g><title>wasmparser::validator::Validator::component_import_section (1 samples, 1.01%)</title><rect x="46.4646%" y="773" width="1.0101%" height="15" fill="rgb(243,84,45)" fg:x="46" fg:w="1"/><text x="46.7146%" y="783.50"></text></g><g><title>wasmparser::validator::component::ComponentState::add_import (1 samples, 1.01%)</title><rect x="46.4646%" y="757" width="1.0101%" height="15" fill="rgb(252,49,23)" fg:x="46" fg:w="1"/><text x="46.7146%" y="767.50"></text></g><g><title>_ZN10wasmparser9validator9component14ComponentState14check_type_ref17h994fa04732aa9bbaE.llvm.973947087014931169 (1 samples, 1.01%)</title><rect x="46.4646%" y="741" width="1.0101%" height="15" fill="rgb(215,19,7)" fg:x="46" fg:w="1"/><text x="46.7146%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 2.02%)</title><rect x="46.4646%" y="837" width="2.0202%" height="15" fill="rgb(238,81,41)" fg:x="46" fg:w="2"/><text x="46.7146%" y="847.50">c..</text></g><g><title>wasmtime::runtime::component::component::Component::from_binary::_{{closure}} (2 samples, 2.02%)</title><rect x="46.4646%" y="821" width="2.0202%" height="15" fill="rgb(210,199,37)" fg:x="46" fg:w="2"/><text x="46.7146%" y="831.50">w..</text></g><g><title>wasmtime::compile::build_component_artifacts (2 samples, 2.02%)</title><rect x="46.4646%" y="805" width="2.0202%" height="15" fill="rgb(244,192,49)" fg:x="46" fg:w="2"/><text x="46.7146%" y="815.50">w..</text></g><g><title>wasmtime_environ::component::translate::Translator::translate (2 samples, 2.02%)</title><rect x="46.4646%" y="789" width="2.0202%" height="15" fill="rgb(226,211,11)" fg:x="46" fg:w="2"/><text x="46.7146%" y="799.50">w..</text></g><g><title>wasmparser::validator::Validator::component_type_section (1 samples, 1.01%)</title><rect x="47.4747%" y="773" width="1.0101%" height="15" fill="rgb(236,162,54)" fg:x="47" fg:w="1"/><text x="47.7247%" y="783.50"></text></g><g><title>wasmparser::validator::component::ComponentState::add_type (1 samples, 1.01%)</title><rect x="47.4747%" y="757" width="1.0101%" height="15" fill="rgb(220,229,9)" fg:x="47" fg:w="1"/><text x="47.7247%" y="767.50"></text></g><g><title>cranelift_codegen::context::Context::compile_and_emit (1 samples, 1.01%)</title><rect x="48.4848%" y="837" width="1.0101%" height="15" fill="rgb(250,87,22)" fg:x="48" fg:w="1"/><text x="48.7348%" y="847.50"></text></g><g><title>cranelift_codegen::context::Context::compile (1 samples, 1.01%)</title><rect x="48.4848%" y="821" width="1.0101%" height="15" fill="rgb(239,43,17)" fg:x="48" fg:w="1"/><text x="48.7348%" y="831.50"></text></g><g><title>cranelift_codegen::context::Context::compile_stencil (1 samples, 1.01%)</title><rect x="48.4848%" y="805" width="1.0101%" height="15" fill="rgb(231,177,25)" fg:x="48" fg:w="1"/><text x="48.7348%" y="815.50"></text></g><g><title>&lt;cranelift_codegen::isa::aarch64::AArch64Backend as cranelift_codegen::isa::TargetIsa&gt;::compile_function (1 samples, 1.01%)</title><rect x="48.4848%" y="789" width="1.0101%" height="15" fill="rgb(219,179,1)" fg:x="48" fg:w="1"/><text x="48.7348%" y="799.50"></text></g><g><title>cranelift_codegen::isa::aarch64::AArch64Backend::compile_vcode (1 samples, 1.01%)</title><rect x="48.4848%" y="773" width="1.0101%" height="15" fill="rgb(238,219,53)" fg:x="48" fg:w="1"/><text x="48.7348%" y="783.50"></text></g><g><title>cranelift_codegen::machinst::abi::SigSet::new (1 samples, 1.01%)</title><rect x="48.4848%" y="757" width="1.0101%" height="15" fill="rgb(232,167,36)" fg:x="48" fg:w="1"/><text x="48.7348%" y="767.50"></text></g><g><title>cranelift_codegen::machinst::abi::SigSet::make_abi_sig_from_ir_signature (1 samples, 1.01%)</title><rect x="48.4848%" y="741" width="1.0101%" height="15" fill="rgb(244,19,51)" fg:x="48" fg:w="1"/><text x="48.7348%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 1.01%)</title><rect x="48.4848%" y="725" width="1.0101%" height="15" fill="rgb(224,6,22)" fg:x="48" fg:w="1"/><text x="48.7348%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 1.01%)</title><rect x="48.4848%" y="709" width="1.0101%" height="15" fill="rgb(224,145,5)" fg:x="48" fg:w="1"/><text x="48.7348%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 1.01%)</title><rect x="48.4848%" y="693" width="1.0101%" height="15" fill="rgb(234,130,49)" fg:x="48" fg:w="1"/><text x="48.7348%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 1.01%)</title><rect x="48.4848%" y="677" width="1.0101%" height="15" fill="rgb(254,6,2)" fg:x="48" fg:w="1"/><text x="48.7348%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 1.01%)</title><rect x="48.4848%" y="661" width="1.0101%" height="15" fill="rgb(208,96,46)" fg:x="48" fg:w="1"/><text x="48.7348%" y="671.50"></text></g><g><title>&lt;cranelift_codegen::ir::extfunc::Signature as core::hash::Hash&gt;::hash (1 samples, 1.01%)</title><rect x="48.4848%" y="645" width="1.0101%" height="15" fill="rgb(239,3,39)" fg:x="48" fg:w="1"/><text x="48.7348%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::hash::Hash&gt;::hash (1 samples, 1.01%)</title><rect x="48.4848%" y="629" width="1.0101%" height="15" fill="rgb(233,210,1)" fg:x="48" fg:w="1"/><text x="48.7348%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 1.01%)</title><rect x="48.4848%" y="613" width="1.0101%" height="15" fill="rgb(244,137,37)" fg:x="48" fg:w="1"/><text x="48.7348%" y="623.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 1.01%)</title><rect x="48.4848%" y="597" width="1.0101%" height="15" fill="rgb(240,136,2)" fg:x="48" fg:w="1"/><text x="48.7348%" y="607.50"></text></g><g><title>&lt;cranelift_codegen::ir::extfunc::AbiParam as core::hash::Hash&gt;::hash (1 samples, 1.01%)</title><rect x="48.4848%" y="581" width="1.0101%" height="15" fill="rgb(239,18,37)" fg:x="48" fg:w="1"/><text x="48.7348%" y="591.50"></text></g><g><title>&lt;cranelift_codegen::ir::extfunc::ArgumentExtension as core::hash::Hash&gt;::hash (1 samples, 1.01%)</title><rect x="48.4848%" y="565" width="1.0101%" height="15" fill="rgb(218,185,22)" fg:x="48" fg:w="1"/><text x="48.7348%" y="575.50"></text></g><g><title>regalloc2::ion::moves::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::resolve_inserted_moves (1 samples, 1.01%)</title><rect x="49.4949%" y="773" width="1.0101%" height="15" fill="rgb(225,218,4)" fg:x="49" fg:w="1"/><text x="49.7449%" y="783.50"></text></g><g><title>regalloc2::moves::MoveAndScratchResolver&lt;GetReg,GetStackSlot,IsStackAlloc&gt;::compute (1 samples, 1.01%)</title><rect x="49.4949%" y="757" width="1.0101%" height="15" fill="rgb(230,182,32)" fg:x="49" fg:w="1"/><text x="49.7449%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 1.01%)</title><rect x="49.4949%" y="741" width="1.0101%" height="15" fill="rgb(242,56,43)" fg:x="49" fg:w="1"/><text x="49.7449%" y="751.50"></text></g><g><title>regalloc2::moves::MoveAndScratchResolver&lt;GetReg,GetStackSlot,IsStackAlloc&gt;::compute::_{{closure}} (1 samples, 1.01%)</title><rect x="49.4949%" y="725" width="1.0101%" height="15" fill="rgb(233,99,24)" fg:x="49" fg:w="1"/><text x="49.7449%" y="735.50"></text></g><g><title>regalloc2::moves::MoveAndScratchResolver&lt;GetReg,GetStackSlot,IsStackAlloc&gt;::is_stack_to_stack_move (1 samples, 1.01%)</title><rect x="49.4949%" y="709" width="1.0101%" height="15" fill="rgb(234,209,42)" fg:x="49" fg:w="1"/><text x="49.7449%" y="719.50"></text></g><g><title>cranelift_codegen::machinst::compile::compile (3 samples, 3.03%)</title><rect x="49.4949%" y="837" width="3.0303%" height="15" fill="rgb(227,7,12)" fg:x="49" fg:w="3"/><text x="49.7449%" y="847.50">cra..</text></g><g><title>regalloc2::run (3 samples, 3.03%)</title><rect x="49.4949%" y="821" width="3.0303%" height="15" fill="rgb(245,203,43)" fg:x="49" fg:w="3"/><text x="49.7449%" y="831.50">reg..</text></g><g><title>regalloc2::ion::run (3 samples, 3.03%)</title><rect x="49.4949%" y="805" width="3.0303%" height="15" fill="rgb(238,205,33)" fg:x="49" fg:w="3"/><text x="49.7449%" y="815.50">reg..</text></g><g><title>regalloc2::ion::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::run (3 samples, 3.03%)</title><rect x="49.4949%" y="789" width="3.0303%" height="15" fill="rgb(231,56,7)" fg:x="49" fg:w="3"/><text x="49.7449%" y="799.50">reg..</text></g><g><title>regalloc2::ion::process::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::process_bundles (2 samples, 2.02%)</title><rect x="50.5051%" y="773" width="2.0202%" height="15" fill="rgb(244,186,29)" fg:x="50" fg:w="2"/><text x="50.7551%" y="783.50">r..</text></g><g><title>regalloc2::ion::process::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::process_bundle (2 samples, 2.02%)</title><rect x="50.5051%" y="757" width="2.0202%" height="15" fill="rgb(234,111,31)" fg:x="50" fg:w="2"/><text x="50.7551%" y="767.50">r..</text></g><g><title>regalloc2::ion::process::&lt;impl regalloc2::ion::data_structures::Env&lt;F&gt;&gt;::try_to_allocate_bundle_to_reg (2 samples, 2.02%)</title><rect x="50.5051%" y="741" width="2.0202%" height="15" fill="rgb(241,149,10)" fg:x="50" fg:w="2"/><text x="50.7551%" y="751.50">r..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 1.01%)</title><rect x="51.5152%" y="725" width="1.0101%" height="15" fill="rgb(249,206,44)" fg:x="51" fg:w="1"/><text x="51.7652%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 1.01%)</title><rect x="51.5152%" y="709" width="1.0101%" height="15" fill="rgb(251,153,30)" fg:x="51" fg:w="1"/><text x="51.7652%" y="719.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 1.01%)</title><rect x="51.5152%" y="693" width="1.0101%" height="15" fill="rgb(239,152,38)" fg:x="51" fg:w="1"/><text x="51.7652%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (1 samples, 1.01%)</title><rect x="51.5152%" y="677" width="1.0101%" height="15" fill="rgb(249,139,47)" fg:x="51" fg:w="1"/><text x="51.7652%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (1 samples, 1.01%)</title><rect x="51.5152%" y="661" width="1.0101%" height="15" fill="rgb(244,64,35)" fg:x="51" fg:w="1"/><text x="51.7652%" y="671.50"></text></g><g><title>create_thread (3 samples, 3.03%)</title><rect x="52.5253%" y="837" width="3.0303%" height="15" fill="rgb(216,46,15)" fg:x="52" fg:w="3"/><text x="52.7753%" y="847.50">cre..</text></g><g><title>clone (3 samples, 3.03%)</title><rect x="52.5253%" y="821" width="3.0303%" height="15" fill="rgb(250,74,19)" fg:x="52" fg:w="3"/><text x="52.7753%" y="831.50">clo..</text></g><g><title>__GI___ctype_init (1 samples, 1.01%)</title><rect x="67.6768%" y="805" width="1.0101%" height="15" fill="rgb(249,42,33)" fg:x="67" fg:w="1"/><text x="67.9268%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 1.01%)</title><rect x="68.6869%" y="789" width="1.0101%" height="15" fill="rgb(242,149,17)" fg:x="68" fg:w="1"/><text x="68.9369%" y="799.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (1 samples, 1.01%)</title><rect x="68.6869%" y="773" width="1.0101%" height="15" fill="rgb(244,29,21)" fg:x="68" fg:w="1"/><text x="68.9369%" y="783.50"></text></g><g><title>std::thread::Thread::cname (1 samples, 1.01%)</title><rect x="68.6869%" y="757" width="1.0101%" height="15" fill="rgb(220,130,37)" fg:x="68" fg:w="1"/><text x="68.9369%" y="767.50"></text></g><g><title>__GI___sysconf (1 samples, 1.01%)</title><rect x="69.6970%" y="773" width="1.0101%" height="15" fill="rgb(211,67,2)" fg:x="69" fg:w="1"/><text x="69.9470%" y="783.50"></text></g><g><title>linux_sysconf (1 samples, 1.01%)</title><rect x="69.6970%" y="757" width="1.0101%" height="15" fill="rgb(235,68,52)" fg:x="69" fg:w="1"/><text x="69.9470%" y="767.50"></text></g><g><title>posix_sysconf (1 samples, 1.01%)</title><rect x="69.6970%" y="741" width="1.0101%" height="15" fill="rgb(246,142,3)" fg:x="69" fg:w="1"/><text x="69.9470%" y="751.50"></text></g><g><title>thread_start (16 samples, 16.16%)</title><rect x="55.5556%" y="837" width="16.1616%" height="15" fill="rgb(241,25,7)" fg:x="55" fg:w="16"/><text x="55.8056%" y="847.50">thread_start</text></g><g><title>start_thread (13 samples, 13.13%)</title><rect x="58.5859%" y="821" width="13.1313%" height="15" fill="rgb(242,119,39)" fg:x="58" fg:w="13"/><text x="58.8359%" y="831.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3 samples, 3.03%)</title><rect x="68.6869%" y="805" width="3.0303%" height="15" fill="rgb(241,98,45)" fg:x="68" fg:w="3"/><text x="68.9369%" y="815.50">std..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 2.02%)</title><rect x="69.6970%" y="789" width="2.0202%" height="15" fill="rgb(254,28,30)" fg:x="69" fg:w="2"/><text x="69.9470%" y="799.50">s..</text></g><g><title>__GI_mprotect (1 samples, 1.01%)</title><rect x="70.7071%" y="773" width="1.0101%" height="15" fill="rgb(241,142,54)" fg:x="70" fg:w="1"/><text x="70.9571%" y="783.50"></text></g><g><title>[unknown] (1 samples, 1.01%)</title><rect x="70.7071%" y="757" width="1.0101%" height="15" fill="rgb(222,85,15)" fg:x="70" fg:w="1"/><text x="70.9571%" y="767.50"></text></g><g><title>[unknown] (1 samples, 1.01%)</title><rect x="70.7071%" y="741" width="1.0101%" height="15" fill="rgb(210,85,47)" fg:x="70" fg:w="1"/><text x="70.9571%" y="751.50"></text></g><g><title>[unknown] (1 samples, 1.01%)</title><rect x="70.7071%" y="725" width="1.0101%" height="15" fill="rgb(224,206,25)" fg:x="70" fg:w="1"/><text x="70.9571%" y="735.50"></text></g><g><title>__memcpy_generic (2 samples, 2.02%)</title><rect x="71.7172%" y="821" width="2.0202%" height="15" fill="rgb(243,201,19)" fg:x="71" fg:w="2"/><text x="71.9672%" y="831.50">_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 1.01%)</title><rect x="73.7374%" y="821" width="1.0101%" height="15" fill="rgb(236,59,4)" fg:x="73" fg:w="1"/><text x="73.9874%" y="831.50"></text></g><g><title>core::ptr::read (1 samples, 1.01%)</title><rect x="73.7374%" y="805" width="1.0101%" height="15" fill="rgb(254,179,45)" fg:x="73" fg:w="1"/><text x="73.9874%" y="815.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="73.7374%" y="789" width="1.0101%" height="15" fill="rgb(226,14,10)" fg:x="73" fg:w="1"/><text x="73.9874%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.01%)</title><rect x="74.7475%" y="821" width="1.0101%" height="15" fill="rgb(244,27,41)" fg:x="74" fg:w="1"/><text x="74.9975%" y="831.50"></text></g><g><title>wasmtime_cranelift::compiler::Compiler::function_compiler::_{{closure}} (1 samples, 1.01%)</title><rect x="74.7475%" y="805" width="1.0101%" height="15" fill="rgb(235,35,32)" fg:x="74" fg:w="1"/><text x="74.9975%" y="815.50"></text></g><g><title>cranelift_codegen::context::Context::clear (1 samples, 1.01%)</title><rect x="74.7475%" y="789" width="1.0101%" height="15" fill="rgb(218,68,31)" fg:x="74" fg:w="1"/><text x="74.9975%" y="799.50"></text></g><g><title>cranelift_codegen::ir::function::Function::clear (1 samples, 1.01%)</title><rect x="74.7475%" y="773" width="1.0101%" height="15" fill="rgb(207,120,37)" fg:x="74" fg:w="1"/><text x="74.9975%" y="783.50"></text></g><g><title>cranelift_codegen::ir::function::FunctionStencil::clear (1 samples, 1.01%)</title><rect x="74.7475%" y="757" width="1.0101%" height="15" fill="rgb(227,98,0)" fg:x="74" fg:w="1"/><text x="74.9975%" y="767.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::clear (1 samples, 1.01%)</title><rect x="74.7475%" y="741" width="1.0101%" height="15" fill="rgb(207,7,3)" fg:x="74" fg:w="1"/><text x="74.9975%" y="751.50"></text></g><g><title>cranelift_entity::primary::PrimaryMap&lt;K,V&gt;::clear (1 samples, 1.01%)</title><rect x="74.7475%" y="725" width="1.0101%" height="15" fill="rgb(206,98,19)" fg:x="74" fg:w="1"/><text x="74.9975%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 1.01%)</title><rect x="74.7475%" y="709" width="1.0101%" height="15" fill="rgb(217,5,26)" fg:x="74" fg:w="1"/><text x="74.9975%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;[cranelift_codegen::ir::extfunc::Signature]&gt; (1 samples, 1.01%)</title><rect x="74.7475%" y="693" width="1.0101%" height="15" fill="rgb(235,190,38)" fg:x="74" fg:w="1"/><text x="74.9975%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;cranelift_codegen::ir::extfunc::Signature&gt; (1 samples, 1.01%)</title><rect x="74.7475%" y="677" width="1.0101%" height="15" fill="rgb(247,86,24)" fg:x="74" fg:w="1"/><text x="74.9975%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;cranelift_codegen::ir::extfunc::AbiParam&gt;&gt; (1 samples, 1.01%)</title><rect x="74.7475%" y="661" width="1.0101%" height="15" fill="rgb(205,101,16)" fg:x="74" fg:w="1"/><text x="74.9975%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam&gt;&gt; (1 samples, 1.01%)</title><rect x="74.7475%" y="645" width="1.0101%" height="15" fill="rgb(246,168,33)" fg:x="74" fg:w="1"/><text x="74.9975%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.01%)</title><rect x="74.7475%" y="629" width="1.0101%" height="15" fill="rgb(231,114,1)" fg:x="74" fg:w="1"/><text x="74.9975%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 1.01%)</title><rect x="74.7475%" y="613" width="1.0101%" height="15" fill="rgb(207,184,53)" fg:x="74" fg:w="1"/><text x="74.9975%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 1.01%)</title><rect x="74.7475%" y="597" width="1.0101%" height="15" fill="rgb(224,95,51)" fg:x="74" fg:w="1"/><text x="74.9975%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 1.01%)</title><rect x="74.7475%" y="581" width="1.0101%" height="15" fill="rgb(212,188,45)" fg:x="74" fg:w="1"/><text x="74.9975%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (1 samples, 1.01%)</title><rect x="75.7576%" y="821" width="1.0101%" height="15" fill="rgb(223,154,38)" fg:x="75" fg:w="1"/><text x="76.0076%" y="831.50"></text></g><g><title>wasmtime_cranelift::compiler::Compiler::function_compiler::_{{closure}} (1 samples, 1.01%)</title><rect x="75.7576%" y="805" width="1.0101%" height="15" fill="rgb(251,22,52)" fg:x="75" fg:w="1"/><text x="76.0076%" y="815.50"></text></g><g><title>&lt;wasmtime_cranelift::compiler::CompilerContext as core::default::Default&gt;::default (1 samples, 1.01%)</title><rect x="75.7576%" y="789" width="1.0101%" height="15" fill="rgb(229,209,22)" fg:x="75" fg:w="1"/><text x="76.0076%" y="799.50"></text></g><g><title>cranelift_codegen::context::Context::new (1 samples, 1.01%)</title><rect x="75.7576%" y="773" width="1.0101%" height="15" fill="rgb(234,138,34)" fg:x="75" fg:w="1"/><text x="76.0076%" y="783.50"></text></g><g><title>cranelift_codegen::context::Context::for_function (1 samples, 1.01%)</title><rect x="75.7576%" y="757" width="1.0101%" height="15" fill="rgb(212,95,11)" fg:x="75" fg:w="1"/><text x="76.0076%" y="767.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="75.7576%" y="741" width="1.0101%" height="15" fill="rgb(240,179,47)" fg:x="75" fg:w="1"/><text x="76.0076%" y="751.50"></text></g><g><title>wasmtime_cranelift::compiler::Compiler::function_compiler (10 samples, 10.10%)</title><rect x="71.7172%" y="837" width="10.1010%" height="15" fill="rgb(240,163,11)" fg:x="71" fg:w="10"/><text x="71.9672%" y="847.50">wasmtime_cranel..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 5.05%)</title><rect x="76.7677%" y="821" width="5.0505%" height="15" fill="rgb(236,37,12)" fg:x="76" fg:w="5"/><text x="77.0177%" y="831.50">std::s..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (5 samples, 5.05%)</title><rect x="76.7677%" y="805" width="5.0505%" height="15" fill="rgb(232,164,16)" fg:x="76" fg:w="5"/><text x="77.0177%" y="815.50">std::s..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (5 samples, 5.05%)</title><rect x="76.7677%" y="789" width="5.0505%" height="15" fill="rgb(244,205,15)" fg:x="76" fg:w="5"/><text x="77.0177%" y="799.50">std::s..</text></g><g><title>__aarch64_swp4_acq (1 samples, 1.01%)</title><rect x="80.8081%" y="773" width="1.0101%" height="15" fill="rgb(223,117,47)" fg:x="80" fg:w="1"/><text x="81.0581%" y="783.50"></text></g><g><title>wasmtime_cranelift::compiler::FunctionCompiler::finish (1 samples, 1.01%)</title><rect x="81.8182%" y="837" width="1.0101%" height="15" fill="rgb(244,107,35)" fg:x="81" fg:w="1"/><text x="82.0682%" y="847.50"></text></g><g><title>wasmtime_cranelift::compiler::FunctionCompiler::finish_with_info (1 samples, 1.01%)</title><rect x="81.8182%" y="821" width="1.0101%" height="15" fill="rgb(205,140,8)" fg:x="81" fg:w="1"/><text x="82.0682%" y="831.50"></text></g><g><title>&lt;cranelift_codegen::machinst::buffer::MachBufferFinalized&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 1.01%)</title><rect x="81.8182%" y="805" width="1.0101%" height="15" fill="rgb(228,84,46)" fg:x="81" fg:w="1"/><text x="82.0682%" y="815.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 1.01%)</title><rect x="81.8182%" y="789" width="1.0101%" height="15" fill="rgb(254,188,9)" fg:x="81" fg:w="1"/><text x="82.0682%" y="799.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (1 samples, 1.01%)</title><rect x="81.8182%" y="773" width="1.0101%" height="15" fill="rgb(206,112,54)" fg:x="81" fg:w="1"/><text x="82.0682%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 1.01%)</title><rect x="81.8182%" y="757" width="1.0101%" height="15" fill="rgb(216,84,49)" fg:x="81" fg:w="1"/><text x="82.0682%" y="767.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 1.01%)</title><rect x="81.8182%" y="741" width="1.0101%" height="15" fill="rgb(214,194,35)" fg:x="81" fg:w="1"/><text x="82.0682%" y="751.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="81.8182%" y="725" width="1.0101%" height="15" fill="rgb(249,28,3)" fg:x="81" fg:w="1"/><text x="82.0682%" y="735.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 1.01%)</title><rect x="82.8283%" y="741" width="1.0101%" height="15" fill="rgb(222,56,52)" fg:x="82" fg:w="1"/><text x="83.0783%" y="751.50"></text></g><g><title>&lt;cranelift_codegen::isa::aarch64::AArch64Backend as cranelift_codegen::isa::TargetIsa&gt;::compile_function (1 samples, 1.01%)</title><rect x="83.8384%" y="741" width="1.0101%" height="15" fill="rgb(245,217,50)" fg:x="83" fg:w="1"/><text x="84.0884%" y="751.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="83.8384%" y="725" width="1.0101%" height="15" fill="rgb(213,201,24)" fg:x="83" fg:w="1"/><text x="84.0884%" y="735.50"></text></g><g><title>cranelift_codegen::context::Context::compute_domtree (1 samples, 1.01%)</title><rect x="84.8485%" y="725" width="1.0101%" height="15" fill="rgb(248,116,28)" fg:x="84" fg:w="1"/><text x="85.0985%" y="735.50"></text></g><g><title>cranelift_codegen::dominator_tree::DominatorTree::compute (1 samples, 1.01%)</title><rect x="84.8485%" y="709" width="1.0101%" height="15" fill="rgb(219,72,43)" fg:x="84" fg:w="1"/><text x="85.0985%" y="719.50"></text></g><g><title>cranelift_codegen::dominator_tree::DominatorTree::compute_postorder (1 samples, 1.01%)</title><rect x="84.8485%" y="693" width="1.0101%" height="15" fill="rgb(209,138,14)" fg:x="84" fg:w="1"/><text x="85.0985%" y="703.50"></text></g><g><title>cranelift_entity::map::SecondaryMap&lt;K,V&gt;::resize (1 samples, 1.01%)</title><rect x="84.8485%" y="677" width="1.0101%" height="15" fill="rgb(222,18,33)" fg:x="84" fg:w="1"/><text x="85.0985%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 1.01%)</title><rect x="84.8485%" y="661" width="1.0101%" height="15" fill="rgb(213,199,7)" fg:x="84" fg:w="1"/><text x="85.0985%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 1.01%)</title><rect x="84.8485%" y="645" width="1.0101%" height="15" fill="rgb(250,110,10)" fg:x="84" fg:w="1"/><text x="85.0985%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="84.8485%" y="629" width="1.0101%" height="15" fill="rgb(248,123,6)" fg:x="84" fg:w="1"/><text x="85.0985%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="84.8485%" y="613" width="1.0101%" height="15" fill="rgb(206,91,31)" fg:x="84" fg:w="1"/><text x="85.0985%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 1.01%)</title><rect x="84.8485%" y="597" width="1.0101%" height="15" fill="rgb(211,154,13)" fg:x="84" fg:w="1"/><text x="85.0985%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 1.01%)</title><rect x="84.8485%" y="581" width="1.0101%" height="15" fill="rgb(225,148,7)" fg:x="84" fg:w="1"/><text x="85.0985%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 1.01%)</title><rect x="84.8485%" y="565" width="1.0101%" height="15" fill="rgb(220,160,43)" fg:x="84" fg:w="1"/><text x="85.0985%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 1.01%)</title><rect x="84.8485%" y="549" width="1.0101%" height="15" fill="rgb(213,52,39)" fg:x="84" fg:w="1"/><text x="85.0985%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 1.01%)</title><rect x="84.8485%" y="533" width="1.0101%" height="15" fill="rgb(243,137,7)" fg:x="84" fg:w="1"/><text x="85.0985%" y="543.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 1.01%)</title><rect x="84.8485%" y="517" width="1.0101%" height="15" fill="rgb(230,79,13)" fg:x="84" fg:w="1"/><text x="85.0985%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 1.01%)</title><rect x="84.8485%" y="501" width="1.0101%" height="15" fill="rgb(247,105,23)" fg:x="84" fg:w="1"/><text x="85.0985%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 1.01%)</title><rect x="84.8485%" y="485" width="1.0101%" height="15" fill="rgb(223,179,41)" fg:x="84" fg:w="1"/><text x="85.0985%" y="495.50"></text></g><g><title>cranelift_codegen::context::Context::dce (1 samples, 1.01%)</title><rect x="85.8586%" y="725" width="1.0101%" height="15" fill="rgb(218,9,34)" fg:x="85" fg:w="1"/><text x="86.1086%" y="735.50"></text></g><g><title>cranelift_codegen::dce::do_dce (1 samples, 1.01%)</title><rect x="85.8586%" y="709" width="1.0101%" height="15" fill="rgb(222,106,8)" fg:x="85" fg:w="1"/><text x="86.1086%" y="719.50"></text></g><g><title>cranelift_codegen::inst_predicates::has_side_effect (1 samples, 1.01%)</title><rect x="85.8586%" y="693" width="1.0101%" height="15" fill="rgb(211,220,0)" fg:x="85" fg:w="1"/><text x="86.1086%" y="703.50"></text></g><g><title>&lt;cranelift_codegen::ir::dfg::Insts as core::ops::index::Index&lt;cranelift_codegen::ir::entities::Inst&gt;&gt;::index (1 samples, 1.01%)</title><rect x="85.8586%" y="677" width="1.0101%" height="15" fill="rgb(229,52,16)" fg:x="85" fg:w="1"/><text x="86.1086%" y="687.50"></text></g><g><title>&lt;cranelift_entity::primary::PrimaryMap&lt;K,V&gt; as core::ops::index::Index&lt;K&gt;&gt;::index (1 samples, 1.01%)</title><rect x="85.8586%" y="661" width="1.0101%" height="15" fill="rgb(212,155,18)" fg:x="85" fg:w="1"/><text x="86.1086%" y="671.50"></text></g><g><title>cranelift_codegen::alias_analysis::AliasAnalysis::new (1 samples, 1.01%)</title><rect x="86.8687%" y="709" width="1.0101%" height="15" fill="rgb(242,21,14)" fg:x="86" fg:w="1"/><text x="87.1187%" y="719.50"></text></g><g><title>cranelift_codegen::alias_analysis::AliasAnalysis::compute_block_input_states (1 samples, 1.01%)</title><rect x="86.8687%" y="693" width="1.0101%" height="15" fill="rgb(222,19,48)" fg:x="86" fg:w="1"/><text x="87.1187%" y="703.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (1 samples, 1.01%)</title><rect x="86.8687%" y="677" width="1.0101%" height="15" fill="rgb(232,45,27)" fg:x="86" fg:w="1"/><text x="87.1187%" y="687.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 1.01%)</title><rect x="86.8687%" y="661" width="1.0101%" height="15" fill="rgb(249,103,42)" fg:x="86" fg:w="1"/><text x="87.1187%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 1.01%)</title><rect x="86.8687%" y="645" width="1.0101%" height="15" fill="rgb(246,81,33)" fg:x="86" fg:w="1"/><text x="87.1187%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 1.01%)</title><rect x="86.8687%" y="629" width="1.0101%" height="15" fill="rgb(252,33,42)" fg:x="86" fg:w="1"/><text x="87.1187%" y="639.50"></text></g><g><title>cranelift_codegen::context::Context::compute_loop_analysis (1 samples, 1.01%)</title><rect x="87.8788%" y="709" width="1.0101%" height="15" fill="rgb(209,212,41)" fg:x="87" fg:w="1"/><text x="88.1288%" y="719.50"></text></g><g><title>cranelift_codegen::loop_analysis::LoopAnalysis::compute (1 samples, 1.01%)</title><rect x="87.8788%" y="693" width="1.0101%" height="15" fill="rgb(207,154,6)" fg:x="87" fg:w="1"/><text x="88.1288%" y="703.50"></text></g><g><title>cranelift_codegen::egraph::elaborate::Elaborator::compute_best_values (1 samples, 1.01%)</title><rect x="88.8889%" y="661" width="1.0101%" height="15" fill="rgb(223,64,47)" fg:x="88" fg:w="1"/><text x="89.1389%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.01%)</title><rect x="88.8889%" y="645" width="1.0101%" height="15" fill="rgb(211,161,38)" fg:x="88" fg:w="1"/><text x="89.1389%" y="655.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.01%)</title><rect x="88.8889%" y="629" width="1.0101%" height="15" fill="rgb(219,138,40)" fg:x="88" fg:w="1"/><text x="89.1389%" y="639.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 1.01%)</title><rect x="88.8889%" y="613" width="1.0101%" height="15" fill="rgb(241,228,46)" fg:x="88" fg:w="1"/><text x="89.1389%" y="623.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::values_and_defs::_{{closure}} (1 samples, 1.01%)</title><rect x="88.8889%" y="597" width="1.0101%" height="15" fill="rgb(223,209,38)" fg:x="88" fg:w="1"/><text x="89.1389%" y="607.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::value_def (1 samples, 1.01%)</title><rect x="88.8889%" y="581" width="1.0101%" height="15" fill="rgb(236,164,45)" fg:x="88" fg:w="1"/><text x="89.1389%" y="591.50"></text></g><g><title>&lt;cranelift_codegen::ir::dfg::ValueData as core::convert::From&lt;cranelift_codegen::ir::dfg::ValueDataPacked&gt;&gt;::from (1 samples, 1.01%)</title><rect x="88.8889%" y="565" width="1.0101%" height="15" fill="rgb(231,15,5)" fg:x="88" fg:w="1"/><text x="89.1389%" y="575.50"></text></g><g><title>cranelift_codegen::egraph::EgraphPass::elaborate (2 samples, 2.02%)</title><rect x="88.8889%" y="693" width="2.0202%" height="15" fill="rgb(252,35,15)" fg:x="88" fg:w="2"/><text x="89.1389%" y="703.50">c..</text></g><g><title>cranelift_codegen::egraph::elaborate::Elaborator::elaborate (2 samples, 2.02%)</title><rect x="88.8889%" y="677" width="2.0202%" height="15" fill="rgb(248,181,18)" fg:x="88" fg:w="2"/><text x="89.1389%" y="687.50">c..</text></g><g><title>cranelift_codegen::egraph::elaborate::Elaborator::elaborate_domtree (1 samples, 1.01%)</title><rect x="89.8990%" y="661" width="1.0101%" height="15" fill="rgb(233,39,42)" fg:x="89" fg:w="1"/><text x="90.1490%" y="671.50"></text></g><g><title>cranelift_codegen::egraph::elaborate::Elaborator::elaborate_block (1 samples, 1.01%)</title><rect x="89.8990%" y="645" width="1.0101%" height="15" fill="rgb(238,110,33)" fg:x="89" fg:w="1"/><text x="90.1490%" y="655.50"></text></g><g><title>cranelift_codegen::egraph::elaborate::Elaborator::start_block (1 samples, 1.01%)</title><rect x="89.8990%" y="629" width="1.0101%" height="15" fill="rgb(233,195,10)" fg:x="89" fg:w="1"/><text x="90.1490%" y="639.50"></text></g><g><title>cranelift_codegen::loop_analysis::LoopAnalysis::is_loop_header (1 samples, 1.01%)</title><rect x="89.8990%" y="613" width="1.0101%" height="15" fill="rgb(254,105,3)" fg:x="89" fg:w="1"/><text x="90.1490%" y="623.50"></text></g><g><title>cranelift_codegen::loop_analysis::LoopAnalysis::innermost_loop (1 samples, 1.01%)</title><rect x="89.8990%" y="597" width="1.0101%" height="15" fill="rgb(221,225,9)" fg:x="89" fg:w="1"/><text x="90.1490%" y="607.50"></text></g><g><title>cranelift_codegen::egraph::OptimizeCtx::insert_pure_enode (2 samples, 2.02%)</title><rect x="90.9091%" y="677" width="2.0202%" height="15" fill="rgb(224,227,45)" fg:x="90" fg:w="2"/><text x="91.1591%" y="687.50">c..</text></g><g><title>cranelift_codegen::egraph::OptimizeCtx::optimize_pure_enode (2 samples, 2.02%)</title><rect x="90.9091%" y="661" width="2.0202%" height="15" fill="rgb(229,198,43)" fg:x="90" fg:w="2"/><text x="91.1591%" y="671.50">c..</text></g><g><title>cranelift_codegen::opts::generated_code::constructor_simplify (1 samples, 1.01%)</title><rect x="91.9192%" y="645" width="1.0101%" height="15" fill="rgb(206,209,35)" fg:x="91" fg:w="1"/><text x="92.1692%" y="655.50"></text></g><g><title>&lt;cranelift_codegen::opts::IsleContext as cranelift_codegen::opts::generated_code::Context&gt;::subsume (1 samples, 1.01%)</title><rect x="91.9192%" y="629" width="1.0101%" height="15" fill="rgb(245,195,53)" fg:x="91" fg:w="1"/><text x="92.1692%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 1.01%)</title><rect x="91.9192%" y="613" width="1.0101%" height="15" fill="rgb(240,92,26)" fg:x="91" fg:w="1"/><text x="92.1692%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 1.01%)</title><rect x="91.9192%" y="597" width="1.0101%" height="15" fill="rgb(207,40,23)" fg:x="91" fg:w="1"/><text x="92.1692%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 1.01%)</title><rect x="91.9192%" y="581" width="1.0101%" height="15" fill="rgb(223,111,35)" fg:x="91" fg:w="1"/><text x="92.1692%" y="591.50"></text></g><g><title>cranelift_codegen::egraph::OptimizeCtx::optimize_skeleton_inst (1 samples, 1.01%)</title><rect x="92.9293%" y="677" width="1.0101%" height="15" fill="rgb(229,147,28)" fg:x="92" fg:w="1"/><text x="93.1793%" y="687.50"></text></g><g><title>cranelift_codegen::alias_analysis::AliasAnalysis::process_inst (1 samples, 1.01%)</title><rect x="92.9293%" y="661" width="1.0101%" height="15" fill="rgb(211,29,28)" fg:x="92" fg:w="1"/><text x="93.1793%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 1.01%)</title><rect x="92.9293%" y="645" width="1.0101%" height="15" fill="rgb(228,72,33)" fg:x="92" fg:w="1"/><text x="93.1793%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 1.01%)</title><rect x="92.9293%" y="629" width="1.0101%" height="15" fill="rgb(205,214,31)" fg:x="92" fg:w="1"/><text x="93.1793%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1 samples, 1.01%)</title><rect x="92.9293%" y="613" width="1.0101%" height="15" fill="rgb(224,111,15)" fg:x="92" fg:w="1"/><text x="93.1793%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 1.01%)</title><rect x="92.9293%" y="597" width="1.0101%" height="15" fill="rgb(253,21,26)" fg:x="92" fg:w="1"/><text x="93.1793%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 1.01%)</title><rect x="92.9293%" y="581" width="1.0101%" height="15" fill="rgb(245,139,43)" fg:x="92" fg:w="1"/><text x="93.1793%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (1 samples, 1.01%)</title><rect x="92.9293%" y="565" width="1.0101%" height="15" fill="rgb(252,170,7)" fg:x="92" fg:w="1"/><text x="93.1793%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (1 samples, 1.01%)</title><rect x="92.9293%" y="549" width="1.0101%" height="15" fill="rgb(231,118,14)" fg:x="92" fg:w="1"/><text x="93.1793%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (1 samples, 1.01%)</title><rect x="92.9293%" y="533" width="1.0101%" height="15" fill="rgb(238,83,0)" fg:x="92" fg:w="1"/><text x="93.1793%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (1 samples, 1.01%)</title><rect x="92.9293%" y="517" width="1.0101%" height="15" fill="rgb(221,39,39)" fg:x="92" fg:w="1"/><text x="93.1793%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (1 samples, 1.01%)</title><rect x="92.9293%" y="501" width="1.0101%" height="15" fill="rgb(222,119,46)" fg:x="92" fg:w="1"/><text x="93.1793%" y="511.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::map_inst_values (1 samples, 1.01%)</title><rect x="93.9394%" y="677" width="1.0101%" height="15" fill="rgb(222,165,49)" fg:x="93" fg:w="1"/><text x="94.1894%" y="687.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::inst_args (1 samples, 1.01%)</title><rect x="93.9394%" y="661" width="1.0101%" height="15" fill="rgb(219,113,52)" fg:x="93" fg:w="1"/><text x="94.1894%" y="671.50"></text></g><g><title>cranelift_codegen::ir::instructions::InstructionData::arguments (1 samples, 1.01%)</title><rect x="93.9394%" y="645" width="1.0101%" height="15" fill="rgb(214,7,15)" fg:x="93" fg:w="1"/><text x="94.1894%" y="655.50"></text></g><g><title>cranelift_codegen::context::Context::egraph_pass (9 samples, 9.09%)</title><rect x="86.8687%" y="725" width="9.0909%" height="15" fill="rgb(235,32,4)" fg:x="86" fg:w="9"/><text x="87.1187%" y="735.50">cranelift_cod..</text></g><g><title>cranelift_codegen::egraph::EgraphPass::run (7 samples, 7.07%)</title><rect x="88.8889%" y="709" width="7.0707%" height="15" fill="rgb(238,90,54)" fg:x="88" fg:w="7"/><text x="89.1389%" y="719.50">cranelift..</text></g><g><title>cranelift_codegen::egraph::EgraphPass::remove_pure_and_optimize (5 samples, 5.05%)</title><rect x="90.9091%" y="693" width="5.0505%" height="15" fill="rgb(213,208,19)" fg:x="90" fg:w="5"/><text x="91.1591%" y="703.50">cranel..</text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::resolve_aliases_in_arguments (1 samples, 1.01%)</title><rect x="94.9495%" y="677" width="1.0101%" height="15" fill="rgb(233,156,4)" fg:x="94" fg:w="1"/><text x="95.1995%" y="687.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::map_inst_values (1 samples, 1.01%)</title><rect x="94.9495%" y="661" width="1.0101%" height="15" fill="rgb(207,194,5)" fg:x="94" fg:w="1"/><text x="95.1995%" y="671.50"></text></g><g><title>cranelift_codegen::ir::dfg::DataFlowGraph::inst_args (1 samples, 1.01%)</title><rect x="94.9495%" y="645" width="1.0101%" height="15" fill="rgb(206,111,30)" fg:x="94" fg:w="1"/><text x="95.1995%" y="655.50"></text></g><g><title>cranelift_codegen::ir::instructions::InstructionData::arguments (1 samples, 1.01%)</title><rect x="94.9495%" y="629" width="1.0101%" height="15" fill="rgb(243,70,54)" fg:x="94" fg:w="1"/><text x="95.1995%" y="639.50"></text></g><g><title>cranelift_codegen::context::Context::compile_stencil (14 samples, 14.14%)</title><rect x="82.8283%" y="757" width="14.1414%" height="15" fill="rgb(242,28,8)" fg:x="82" fg:w="14"/><text x="83.0783%" y="767.50">cranelift_codegen::co..</text></g><g><title>cranelift_codegen::context::Context::optimize (12 samples, 12.12%)</title><rect x="84.8485%" y="741" width="12.1212%" height="15" fill="rgb(219,106,18)" fg:x="84" fg:w="12"/><text x="85.0985%" y="751.50">cranelift_codegen:..</text></g><g><title>cranelift_codegen::context::Context::legalize (1 samples, 1.01%)</title><rect x="95.9596%" y="725" width="1.0101%" height="15" fill="rgb(244,222,10)" fg:x="95" fg:w="1"/><text x="96.2096%" y="735.50"></text></g><g><title>cranelift_codegen::legalizer::simple_legalize (1 samples, 1.01%)</title><rect x="95.9596%" y="709" width="1.0101%" height="15" fill="rgb(236,179,52)" fg:x="95" fg:w="1"/><text x="96.2096%" y="719.50"></text></g><g><title>wasmtime_cranelift::compiler::FunctionCompiler::finish_with_info (15 samples, 15.15%)</title><rect x="82.8283%" y="837" width="15.1515%" height="15" fill="rgb(213,23,39)" fg:x="82" fg:w="15"/><text x="83.0783%" y="847.50">wasmtime_cranelift::com..</text></g><g><title>wasmtime_cranelift::compiler::compile_maybe_cached (15 samples, 15.15%)</title><rect x="82.8283%" y="821" width="15.1515%" height="15" fill="rgb(238,48,10)" fg:x="82" fg:w="15"/><text x="83.0783%" y="831.50">wasmtime_cranelift::com..</text></g><g><title>wasmtime_cranelift::compiler::compile_uncached (15 samples, 15.15%)</title><rect x="82.8283%" y="805" width="15.1515%" height="15" fill="rgb(251,196,23)" fg:x="82" fg:w="15"/><text x="83.0783%" y="815.50">wasmtime_cranelift::com..</text></g><g><title>cranelift_codegen::context::Context::compile_and_emit (15 samples, 15.15%)</title><rect x="82.8283%" y="789" width="15.1515%" height="15" fill="rgb(250,152,24)" fg:x="82" fg:w="15"/><text x="83.0783%" y="799.50">cranelift_codegen::cont..</text></g><g><title>cranelift_codegen::context::Context::compile (15 samples, 15.15%)</title><rect x="82.8283%" y="773" width="15.1515%" height="15" fill="rgb(209,150,17)" fg:x="82" fg:w="15"/><text x="83.0783%" y="783.50">cranelift_codegen::cont..</text></g><g><title>cranelift_codegen::machinst::CompiledCodeBase&lt;cranelift_codegen::machinst::buffer::Stencil&gt;::apply_params (1 samples, 1.01%)</title><rect x="96.9697%" y="757" width="1.0101%" height="15" fill="rgb(234,202,34)" fg:x="96" fg:w="1"/><text x="97.2197%" y="767.50"></text></g><g><title>__memcpy_generic (1 samples, 1.01%)</title><rect x="96.9697%" y="741" width="1.0101%" height="15" fill="rgb(253,148,53)" fg:x="96" fg:w="1"/><text x="97.2197%" y="751.50"></text></g><g><title>wasmtime_environ::component::translate::inline::run (1 samples, 1.01%)</title><rect x="97.9798%" y="821" width="1.0101%" height="15" fill="rgb(218,129,16)" fg:x="97" fg:w="1"/><text x="98.2298%" y="831.50"></text></g><g><title>wasmtime_environ::component::types::ComponentTypesBuilder::convert_component_entity_type (1 samples, 1.01%)</title><rect x="97.9798%" y="805" width="1.0101%" height="15" fill="rgb(216,85,19)" fg:x="97" fg:w="1"/><text x="98.2298%" y="815.50"></text></g><g><title>wasmtime_environ::component::types::ComponentTypesBuilder::convert_instance (1 samples, 1.01%)</title><rect x="97.9798%" y="789" width="1.0101%" height="15" fill="rgb(235,228,7)" fg:x="97" fg:w="1"/><text x="98.2298%" y="799.50"></text></g><g><title>all (99 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(245,175,0)" fg:x="0" fg:w="99"/><text x="0.2500%" y="879.50"></text></g><g><title>host (99 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(208,168,36)" fg:x="0" fg:w="99"/><text x="0.2500%" y="863.50">host</text></g><g><title>wasmtime_environ::component::translate::Translator::translate (2 samples, 2.02%)</title><rect x="97.9798%" y="837" width="2.0202%" height="15" fill="rgb(246,171,24)" fg:x="97" fg:w="2"/><text x="98.2298%" y="847.50">w..</text></g><g><title>wasmtime_environ::module_environ::ModuleEnvironment::translate (1 samples, 1.01%)</title><rect x="98.9899%" y="821" width="1.0101%" height="15" fill="rgb(215,142,24)" fg:x="98" fg:w="1"/><text x="99.2399%" y="831.50"></text></g><g><title>wasmtime_environ::module_environ::ModuleEnvironment::translate_payload (1 samples, 1.01%)</title><rect x="98.9899%" y="805" width="1.0101%" height="15" fill="rgb(250,187,7)" fg:x="98" fg:w="1"/><text x="99.2399%" y="815.50"></text></g><g><title>&lt;wasmparser::readers::core::elements::Element as wasmparser::readers::FromReader&gt;::from_reader (1 samples, 1.01%)</title><rect x="98.9899%" y="789" width="1.0101%" height="15" fill="rgb(228,66,33)" fg:x="98" fg:w="1"/><text x="99.2399%" y="799.50"></text></g></svg></svg>